
@{
    ViewBag.Title = "Projectpage";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="container-fluid p-0" id="pageContent">
    <div class="row" style="height:100%;">
        <div class="col-md-3" style="height:100%;padding: 50px 0px 50px 50px;">
            <fieldset class="col-md-12" id="ProjectComponents" style="height: 100%;">
                <legend class="" id="pcTitle"></legend>
                <div class="col-md-12" id="pcLinks">
                    <ul>
                        <li><a class="active">General-Info</a></li>
                        <li><a>Modules</a></li>
                        <li><a>Epics</a></li>
                        <li><a>NFRs</a></li>
                        <li><a>Sprints</a></li>
                        <li><a>Sprint-Backlog</a></li>
                        <li><a>Tasks</a></li>
                        <li><a>Product-Backlog</a></li>
                        <li><a>Statistical-Reports</a></li>
                    </ul>
                </div>
            </fieldset>
        </div>
        <div class="col-md-9 p-5" id="ProjectContetntContainer" style="height:100%;">
            <fieldset style="height:100%;">
                <legend id="ComponentContentTitle">General-Info</legend>
                <div class="col-md-12 p-4 contentDiv" style="height: 100%;overflow-y: auto;position:relative;" id="General-InfoContentDiv">
                    <a onclick="suspendProject();" href="#" style="position:absolute; left:40px;top:0px;color:#d44;">Delete</a>
                    <a onclick="viewProjGiUpdatePanel(0);" href="#" style="position:absolute; right:40px;top:0px;">Update</a>
                    <div class="row p-3">
                        <div class="col-md-4">
                            <strong>Customer:<small id="display-g-i-CustomerName" class="gi-display-field"></small></strong>
                        </div>
                        <div class="col-md-4">
                            <strong>Customer Phone:<small id="display-g-i-CustomerPhone" class="gi-display-field"></small></strong>
                        </div>
                        <div class="col-md-4">
                            <strong>Customer Email:<small id="display-g-i-CustomerEmail" class="gi-display-field"></small></strong>
                        </div>
                    </div>
                    <div class="row p-3">
                        <div class="col-md-4">
                            <strong>Project ID:<small id="display-g-i-ProjectID" class="gi-display-field"></small></strong>
                        </div>
                        <div class="col-md-4">
                            <strong>Project Name:<small id="display-g-i-ProjectName" class="gi-display-field"></small></strong>
                        </div>
                        <div class="col-md-4">
                            <strong>Project Domain:<small id="display-g-i-ProjectDomain" class="gi-display-field"></small></strong>
                        </div>
                    </div>
                    <div class="row p-3">
                        <div class="col-md-4">
                            <strong>Start Date:<small id="display-g-i-StartDate" class="gi-display-field"></small></strong>
                        </div>
                        <div class="col-md-4">
                            <strong>End Date:<small id="display-g-i-EndDate" class="gi-display-field"></small></strong>
                        </div>
                        <div class="col-md-4">
                            <strong>Creation Date:<small id="display-g-i-CreationDate" class="gi-display-field"></small></strong>
                        </div>
                    </div>
                    <div class="row p-3">
                        <div class="col-md-4">
                            <strong>System Type:<small id="display-g-i-SystemType" class="gi-display-field"></small></strong>
                        </div>
                        <div class="col-md-4">
                            <strong>Modules #:<small id="display-g-i-ModulesNum" class="gi-display-field"></small></strong>
                        </div>

                        <div class="col-md-4">
                            <strong>NFRs #:<small id="display-g-i-NFRs" class="gi-display-field"> 9</small></strong>
                        </div>
                    </div>
                    <div class="row p-3">
                        <div class="col-md-4">
                            <strong>Sprints #:<small id="display-g-i-SprintsNum" class="gi-display-field"> 50</small></strong>
                        </div>
                        <div class="col-md-4">
                            <strong>Status:<small id="display-g-i-ProjectStatus" class="gi-display-field"></small></strong>
                        </div>
                        <div class="col-md-4">
                            <strong>Description:<small id="display-g-i-ProjectDescription" class="gi-display-field"></small></strong>
                        </div>
                    </div>
                    <hr>
                    <div class="table-responsive p-3" style="max-height: 100%;">
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>Assign Users</strong></p>
                            </div>
                        </div>

                        <div class="col-md-4 text-left float-left" style="padding: 0 0 5px 0;">
                            <select onchange="getUsersList();" id="g-i-users-FilterFlag" class="form-control form-control-sm">
                                <option selected disabled value="0">Assigned / Unassigned / Both</option>
                                <option value="1">Assigned</option>
                                <option value="2">Unassigned</option>
                                <option value="3">Both</option>
                            </select>
                        </div>
                        <div class="Table-Pagination" style="float: right;padding-top: 10px;">
                            <div class="TP-Row">
                                <div class="TP-PageIndex-Container">
                                    <label>Page:</label>
                                    <select></select>
                                </div>
                                <div class="TP-IPP-Container">
                                    <label>Items Per Page:</label>
                                    <select></select>
                                </div>
                            </div>
                        </div>
                        <table class="table table-bordered table-hover table-sm">
                            <thead>
                                <tr>
                                    <th scope="col" hidden>#</th>
                                    <th scope="col">Email</th>
                                    <th scope="col">Full Name</th>
                                    <th scope="col">Title</th>
                                    <th scope="col">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="ulTableBody">
                            </tbody>
                        </table>
                        <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Project Users');">Export</button>

                    </div>

                </div>
                <div class="col-md-12 p-4 contentDiv" style="height: 100%;overflow-y: auto;display: none;" id="ModulesContentDiv">
                    <div class="table-responsive" style="max-height: 45%;">
                        <p style="margin:0;float:left;"><strong>Project Modules:</strong></p>
                        <div class="Table-Pagination" style="text-align:right;float:right;">
                            <div class="TP-Row">
                                <div class="TP-PageIndex-Container">
                                    <label>Page:</label>
                                    <select></select>
                                </div>
                                <div class="TP-IPP-Container">
                                    <label>Items Per Page:</label>
                                    <select></select>
                                </div>
                            </div>
                        </div>
                        <table class="table table-bordered table-hover table-sm">
                            <thead>
                                <tr>
                                    <th scope="col" hidden>#</th>
                                    <th scope="col">Domain</th>
                                    <th scope="col">Module</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="pmlTableBody">
                            </tbody>
                        </table>
                        <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Proj Assigned Modules');">Export</button>

                    </div>

                    <hr>

                    <div class="table-responsive" style="max-height: 45%;">
                        <p style="margin:0;float:left;"><strong>Modules List:</strong></p>
                        <div class="Table-Pagination" style="text-align:right;float:right;">
                            <div class="TP-Row">
                                <div class="TP-PageIndex-Container">
                                    <label>Page:</label>
                                    <select></select>
                                </div>
                                <div class="TP-IPP-Container">
                                    <label>Items Per Page:</label>
                                    <select></select>
                                </div>
                            </div>
                        </div>
                        <table class="table table-bordered table-hover table-sm">
                            <thead>
                                <tr>
                                    <th scope="col" hidden>#</th>
                                    <th scope="col">Domain</th>
                                    <th scope="col">Module</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="mlTableBody">
                            </tbody>
                        </table>
                        <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Proj Domain Modules');">Export</button>

                    </div>

                </div>
                <div class="col-md-12 p-4 contentDiv" style="height: 100%;overflow-y: auto;display: none;" id="EpicsContentDiv">
                    <div class="table-responsive" style="max-height: 45%;">
                        <p style="margin:0;float:left;"><strong>Project Epics:</strong></p>
                        <div class="Table-Pagination" style="text-align:right;float:right;">
                            <div class="TP-Row">
                                <div class="TP-PageIndex-Container">
                                    <label>Page:</label>
                                    <select></select>
                                </div>
                                <div class="TP-IPP-Container">
                                    <label>Items Per Page:</label>
                                    <select></select>
                                </div>
                            </div>
                        </div>
                        <table class="table table-bordered table-hover table-sm">
                            <thead>
                                <tr>
                                    <th scope="col" hidden>#</th>
                                    <th scope="col">Epic</th>
                                    <th scope="col">Module</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="elTableBody">
                            </tbody>
                        </table>
                        <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Project Epics');">Export</button>

                    </div>

                    <hr>

                    <p style="margin:0;"><strong>Create Epic:</strong></p>
                    <hr style="width: 15%;position: relative;left:0;text-align: left;margin:10px 0;">
                    <div class="col-md-12" style="height: auto;">
                        <div class="row p-4">
                            <div class="col-md-4 offset-md-1">
                                <label><span class="mandatoryStar">*</span>Epic Name:</label>
                                <input id="add-epic-Name" type="text" class="form-control form-control-sm epic-mandatory-field add-epic-input-txt" placeholder="Epic 1, Epic 2 .. etc" />
                            </div>
                            <div class="col-md-3">
                                <label>Module:</label>
                                <select id="add-epic-Module" class="form-control form-control-sm add-epic-input-ddm"></select>
                            </div>

                            <div class="col-md-4 p-0" style="position: relative;">
                                <button onclick="createNewEpic();" class="btn btn-success btn-sm" style="position: absolute;bottom: 0;width: 50%;margin-left: 21%;">Save</button>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-md-12 p-4 contentDiv" style="height: 100%;overflow-y: auto;display: none;" id="NFRsContentDiv">

                    <div class="row p-1" style="height: 50%;">
                        <div class="table-responsive col-md-6" style="max-height: 100%;">
                            <p style="margin:0;float:left;"><strong>Project NFRs:</strong></p>
                            <div class="Table-Pagination" style="text-align:right;float:right;">
                                <div class="TP-Row">
                                    <div class="TP-PageIndex-Container">
                                        <label>Page:</label>
                                        <select></select>
                                    </div>
                                    <div class="TP-IPP-Container">
                                        <label>Items Per Page:</label>
                                        <select></select>
                                    </div>
                                </div>
                            </div>
                            <table class="table table-bordered table-hover table-sm">
                                <thead>
                                    <tr>
                                        <th scope="col" hidden>#</th>
                                        <th scope="col">NFR Name</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="pnfrlTableBody">

                                    <tr>
                                        <th scope="row">1</th>
                                        <td>Usability</td>
                                        <td><button class="btn btn-sm btn-secondary">Unassign</button></td>
                                    </tr>
                                    <tr>
                                        <th scope="row">2</th>
                                        <td>Serviceability</td>
                                        <td><button class="btn btn-sm btn-secondary">Unassign</button></td>
                                    </tr>
                                    <tr>
                                        <th scope="row">3</th>
                                        <td>Manageability</td>
                                        <td><button class="btn btn-sm btn-secondary">Unassign</button></td>
                                    </tr>
                                    <tr>
                                        <th scope="row">4</th>
                                        <td>Recoverability</td>
                                        <td><button class="btn btn-sm btn-secondary">Unassign</button></td>
                                    </tr>

                                </tbody>
                            </table>
                            <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Proj Assigned NFRs');">Export</button>

                        </div>
                        <div class="table-responsive col-md-6" style="max-height: 100%;">
                            <p style="margin:0;float:left;"><strong>NFRs List:</strong></p>
                            <div class="Table-Pagination" style="text-align:right;float:right;">
                                <div class="TP-Row">
                                    <div class="TP-PageIndex-Container">
                                        <label>Page:</label>
                                        <select></select>
                                    </div>
                                    <div class="TP-IPP-Container">
                                        <label>Items Per Page:</label>
                                        <select></select>
                                    </div>
                                </div>
                            </div>
                            <table class="table table-bordered table-hover table-sm">
                                <thead>
                                    <tr>
                                        <th scope="col" hidden>#</th>
                                        <th scope="col">NFR Name</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="anfrlTableBody">

                                    <tr>
                                        <th scope="row">1</th>
                                        <td>Capacity</td>
                                        <td><button class="btn btn-sm btn-primary">Assign</button></td>
                                    </tr>
                                    <tr>
                                        <th scope="row">2</th>
                                        <td>Availability</td>
                                        <td><button class="btn btn-sm btn-primary">Assign</button></td>
                                    </tr>
                                    <tr>
                                        <th scope="row">3</th>
                                        <td>Scalability</td>
                                        <td><button class="btn btn-sm btn-primary">Assign</button></td>
                                    </tr>
                                    <tr>
                                        <th scope="row">4</th>
                                        <td>Interoperability</td>
                                        <td><button class="btn btn-sm btn-primary">Assign</button></td>
                                    </tr>

                                </tbody>
                            </table>
                            <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Proj Unassigned NFRs');">Export</button>

                        </div>
                    </div>

                    <hr>

                    <div class="row p-1" style="height: 50%;">
                        <div class="col-md-12 text-center"><h4>Recommended NFRs</h4><hr class="col-md-6"></div>
                        <div class="table-responsive col-md-6" style="max-height: 100%;">
                            <p style="margin:0;float:left;"><strong>Based On Research:</strong></p>
                            <div class="Table-Pagination" style="text-align:right;float:right;">
                                <div class="TP-Row">
                                    <div class="TP-PageIndex-Container">
                                        <label>Page:</label>
                                        <select></select>
                                    </div>
                                    <div class="TP-IPP-Container">
                                        <label>Items Per Page:</label>
                                        <select></select>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="col-12 d-flex p-0">
                                <table class="table table-bordered table-hover table-sm col-6" id="nfr_rec_domain_table">
                                    <thead>
                                        <tr>
                                            <th scope="col" hidden>#</th>
                                            <th scope="col">For Domain</th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        <tr>
                                            <th scope="row" hidden>1</th>
                                            <td>Usability</td>
                                        </tr>
                                        <tr>
                                            <th scope="row" hidden>2</th>
                                            <td>Serviceability</td>
                                        </tr>
                                        <tr>
                                            <th scope="row" hidden>3</th>
                                            <td>Manageability</td>
                                        </tr>
                                        <tr>
                                            <th scope="row" hidden>4</th>
                                            <td>Recoverability</td>
                                        </tr>

                                    </tbody>
                                </table>
                                <table class="table table-bordered table-hover table-sm col-6" id="nfr_rec_apptype_table">
                                    <thead>
                                        <tr>
                                            <th scope="col" hidden>#</th>
                                            <th scope="col">For App Type</th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        <tr>
                                            <th scope="row" hidden>1</th>
                                            <td>Usability</td>
                                        </tr>
                                        <tr>
                                            <th scope="row" hidden>2</th>
                                            <td>Serviceability</td>
                                        </tr>
                                        <tr>
                                            <th scope="row" hidden>3</th>
                                            <td>Manageability</td>
                                        </tr>
                                        <tr>
                                            <th scope="row" hidden>4</th>
                                            <td>Recoverability</td>
                                        </tr>

                                    </tbody>
                                </table>
                            </div>
                            <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Proj BOR NFRs');">Export</button>

                        </div>
                        <div class="table-responsive col-md-6" style="max-height: 100%;">
                            <p style="margin:0;float:left;"><strong>Previous Projects:</strong></p>

                            <select class="form-control form-control-sm col-md-2 d-inline-block p-0 ml-2" style="max-height:25px;box-shadow:none;"
                                    onchange="getNfrRecFromProjects(this.value);">
                                <option value="1">Top 1</option>
                                <option value="2">Top 2</option>
                                <option value="3">Top 3</option>
                                <option value="4" selected>Top 4</option>
                                <option value="5">Top 5</option>
                                <option value="10">Top 10</option>
                            </select>
                            <div class="Table-Pagination" style="text-align:right;float:right;">
                                <div class="TP-Row">
                                    <div class="TP-PageIndex-Container">
                                        <label>Page:</label>
                                        <select></select>
                                    </div>
                                    <div class="TP-IPP-Container">
                                        <label>Items Per Page:</label>
                                        <select></select>
                                    </div>
                                </div>
                            </div>
                            <table class="table table-bordered table-hover table-sm">
                                <thead>
                                    <tr>
                                        <th scope="col" hidden>#</th>
                                        <th scope="col">NFR Name</th>
                                        <th scope="col">Usage %</th>
                                    </tr>
                                </thead>
                                <tbody id="RecommendedNFRsPrevProjs">

                                    <tr>
                                        <th scope="row" hidden>1</th>
                                        <td>Capacity</td>
                                        <td>70%</td>
                                    </tr>
                                    <tr>
                                        <th scope="row" hidden>2</th>
                                        <td>Availability</td>
                                        <td>60%</td>
                                    </tr>
                                    <tr>
                                        <th scope="row" hidden>3</th>
                                        <td>Scalability</td>
                                        <td>50%</td>
                                    </tr>
                                    <tr>
                                        <th scope="row" hidden>4</th>
                                        <td>Interoperability</td>
                                        <td>40%</td>
                                    </tr>

                                </tbody>
                            </table>
                            <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Proj PP NFRs');">Export</button>

                        </div>
                    </div>
                </div>
                <div class="col-md-12 p-4 contentDiv" style="height: 100%;overflow-y: auto;display: none;" id="SprintsContentDiv">
                    <div class="table-responsive" style="max-height: 45%;">
                        <p style="margin:0;float:left;"><strong>Project Sprints:</strong></p>
                        <div class="Table-Pagination" style="text-align:right;float:right;">
                            <div class="TP-Row">
                                <div class="TP-PageIndex-Container">
                                    <label>Page:</label>
                                    <select></select>
                                </div>
                                <div class="TP-IPP-Container">
                                    <label>Items Per Page:</label>
                                    <select></select>
                                </div>
                            </div>
                        </div>
                        <table class="table table-bordered table-hover table-sm">
                            <thead>
                                <tr>
                                    <th scope="col" hidden>#</th>
                                    <th scope="col">Sprint</th>
                                    <th scope="col">Start Date</th>
                                    <th scope="col">End Date</th>
                                    <th scope="col">Status</th>
                                    <th scope="col">Goal</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="slTableBody">
                            </tbody>
                        </table>
                        <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Proj Sprints');">Export</button>

                    </div>

                    <hr>

                    <p style="margin:0;"><strong>Create Sprint:</strong></p>
                    <hr style="width: 15%;position: relative;left:0;text-align: left;margin:10px 0;">
                    <div class="col-md-12" style="height: auto;">
                        <div class="row p-2">
                            <div class="col-md-3 offset-md-1">
                                <label><span class="mandatoryStar">*</span>Sprint Name:</label>
                                <input id="add-sprint-Name" type="text" class="form-control form-control-sm sprint-add-field sprint-mandatory-field add-sprint-input-txt" placeholder="Sprint 1, Sprint 2 .. etc" />
                            </div>
                            <div class="col-md-3">
                                <label><span class="mandatoryStar">*</span>Start Date:</label>
                                <input id="add-sprint-StartDate" type="date" class="form-control form-control-sm sprint-add-field sprint-mandatory-field add-sprint-input-dt" placeholder="12-9-2021 .. etc" />
                            </div>
                            <div class="col-md-3">
                                <label><span class="mandatoryStar">*</span>End Date:</label>
                                <input id="add-sprint-EndDate" type="date" class="form-control form-control-sm sprint-add-field sprint-mandatory-fieldadd-sprint-input-dt" placeholder="12/4/2021 .. etc" />
                            </div>
                        </div>
                        <div class="row p-2">
                            <div class="col-md-4 offset-md-1 text-left">
                                <label>Sprint Goal:</label>
                                <textarea id="add-sprint-Goal" rows="1" class="form-control form-control-sm sprint-add-field add-sprint-input-txt" placeholder="Some goal text here..."></textarea>
                            </div>
                            <div class="col-md-2">
                                <label><span class="mandatoryStar">*</span>Status</label>
                                <select id="add-sprint-Status" class="form-control form-control-sm sprint-add-field sprint-mandatory-field add-sprint-input-ddm"></select>
                            </div>
                            <div class="col-md-4 p-0" style="position: relative;">
                                <button onclick="createNewSprint();" class="btn btn-success btn-sm" style="position: absolute;bottom: 0;width: 50%;margin-left: 21%;">Save</button>
                            </div>
                        </div>
                        <div class="row p-2">
                        </div>
                    </div>
                </div>
                <div class="col-md-12 p-4 contentDiv" style="height: 100%;overflow-y: auto;display: none;" id="Sprint-BacklogContentDiv">
                    <div class="table-responsive p-3" style="max-height: 100%;">
                        <div class="row p-2">
                            <div class="col-md-4">
                                <label>User-Story ID</label>
                                <input id="srch-us-ID" type="text" placeholder="123-cb-24, 123, ..... etc" class="form-control form-control-sm" />
                            </div>
                            <div class="col-md-4">
                                <label>Module</label>
                                <select id="srch-us-Module" class="form-control form-control-sm"></select>
                            </div>
                            <div class="col-md-4">
                                <label>Created By</label>
                                <select id="srch-us-CreatedBy" class="form-control form-control-sm"></select>
                            </div>
                        </div>
                        <div class="row p-2">
                            <div class="col-md-4">
                                <label>Sprint</label>
                                <select id="srch-us-Sprint" class="form-control form-control-sm"></select>
                            </div>
                            <div class="col-md-4">
                                <label>Status</label>
                                <select id="srch-us-Status" class="form-control form-control-sm"></select>
                            </div>
                            <div class="col-md-4 text-center">
                                <button onclick="SearchUserStories();" class="btn btn-success btn-sm" style="width:50%;float:right;position: relative;bottom: -30px;">Search</button>
                            </div>
                        </div>
                        <br>
                        <hr style="margin:10px 0 5px 0;" />
                        <div class="row text-center" style="font-size:14px;">
                            <div class="col-md-4 text-left"><strong style="color: #666;">Project-ID: </strong><small id="us-header-projectID">23553</small></div>
                            <div class="col-md-4 text-center"><strong style="color: #666;">Project: </strong><small id="us-header-project">Project 1</small></div>
                            <div class="col-md-4 text-right"><strong style="color:#666;">Domain: </strong><small id="us-header-domain">Domain 1</small></div>
                        </div>
                        <hr style="margin:5px 0 10px 0;" />
                        <div class="Table-Pagination">
                            <div class="TP-Row">
                                <div class="TP-PageIndex-Container">
                                    <label>Page:</label>
                                    <select></select>
                                </div>
                                <div class="TP-IPP-Container">
                                    <label>Items Per Page:</label>
                                    <select></select>
                                </div>
                            </div>
                        </div>
                        <table class="table table-bordered table-hover table-sm">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Title</th>
                                    <th scope="col">Status</th>
                                    <th scope="col">Requirement</th>
                                    <th scope="col">Created By</th>
                                    <th scope="col">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="uslTableBody">
                            </tbody>
                        </table>
                        <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Proj UserStories');">Export</button>

                    </div>
                    <hr>
                    <div class="col-md-12 Add-New-US-Container">
                        <div class="com-md-12 text-center">
                            <h4>Add New User Story</h4>
                            <hr style="width: 50%;">
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <label><span class="mandatoryStar">*</span>Type Of Requirement</label>
                                <select id="add-us-ReqType" onchange="handleReqTypeInputes();" class="form-control form-control-sm us-main-mandatory add-us-input-ddm"></select>
                            </div>
                            <div class="col-md-4">
                                <label>Priority</label>
                                <select id="add-us-Priority" class="form-control form-control-sm add-us-input-ddm"></select>
                            </div>
                            <div class="col-md-4">
                                <label><span class="mandatoryStar">*</span>Status</label>
                                <select id="add-us-Status" class="form-control form-control-sm us-main-mandatory add-us-input-ddm"></select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <label>Assigned To</label>
                                <select id="add-us-AssignTo" onchange="appendTagsToAssigedUsersTags($(this));" class="form-control form-control-sm add-us-input-ddm"> </select>
                            </div>
                            <div class="col-md-4">
                                <label>Assign To Sprint</label>
                                <select id="add-us-Sprint" class="form-control form-control-sm add-us-input-ddm"></select>
                            </div>
                            <div class="col-md-4">
                                <label style="width:100%;">Attachment <i title="Reset Inserted Files!" onclick="$('#add-us-Attachments').val('');$('.custom-file-label').text('Choose Files');" style="cursor:pointer;float:right;color:dodgerblue;" class="fa fa-refresh"></i></label>
                                <div class="custom-file">
                                    <input onchange="$('.custom-file-label').text('Hover To View Files....');" type="file" multiple class="custom-file-input my-custom-file-input add-us-input-attach" id="add-us-Attachments">
                                    <label class="custom-file-label" for="customFile" style="height:32.5px;">Choose Files</label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <label>Assigned Users</label><br />
                                <input type="text" id="add-us-AssignToTags" data-role="tagsinput" class="form-control form-control-sm add-us-input-tags" placeholder="Select Users Dropdown">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 text-center">
                                <label class="custom-us-input nonestandard-us-input"><span class="mandatoryStar">*</span>Custom User Story</label>
                                <label class="nfr-us-input"><span class="mandatoryStar">*</span>Description</label>
                                <label class="standard-us-input">Acceptance Criteria</label>
                                <textarea id="add-us-CustomUserStory" rows="1" class="form-control form-control-sm custom-us-input nonestandard-us-input us-fr-custom-mandatory add-us-input-txt" style="text-align:center;" placeholder="your story here..."></textarea>
                                <textarea id="add-us-Description" rows="1" class="form-control form-control-sm nfr-us-input us-nfr-mandatory add-us-input-txt" style="text-align:center;" placeholder="your description here..."></textarea>
                                <textarea id="add-us-AcceptanceCriteria" rows="1" class="form-control form-control-sm standard-us-input add-us-input-txt" style="text-align:center;" placeholder="your acceptance criteria here..."></textarea>
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-md-4">
                                <label><span class="mandatoryStar">*</span>Title</label>
                                <input id="add-us-Title" class="form-control form-control-sm us-main-mandatory add-us-input-txt" placeholder="Some Title..." />
                            </div>
                            <div class="col-md-4">
                                <label class="custom-us-input"><span class="mandatoryStar">*</span>Type Of U.S</label>
                                <label class="nfr-us-input">Pos/Neg U.S</label>
                                <select id="add-us-UsType" onchange="handleUSTypeInputes();" class="form-control form-control-sm custom-us-input us-fr-mandatory add-us-input-ddm"></select>
                                <select id="add-us-PosOrNeg" class="form-control form-control-sm nfr-us-input add-us-input-ddm"></select>
                            </div>
                            <div class="col-md-4">
                                <label class=""><span class="mandatoryStar" style="display:none;">*</span>Related To</label>
                                <select onchange="adjustUSRelations('#add-us-Relations');" id="add-us-Relations" class="form-control form-control-sm add-us-input-ddm"></select>
                            </div>
                        </div>
                        <div class="nfr-us-input">
                            <div class="row">
                                <div class="col-md-4">
                                    <label><span class="mandatoryStar">*</span>For</label>
                                    <input id="add-us-NfrFor" class="form-control form-control-sm us-nfr-mandatory add-us-input-txt" placeholder="performance.." />
                                </div>
                                <div class="col-md-4">
                                    <label><span class="mandatoryStar">*</span>I Want</label>
                                    <input id="add-us-NfrIWant" class="form-control form-control-sm us-nfr-mandatory add-us-input-txt" placeholder="response.." />
                                </div>
                                <div class="col-md-4">
                                    <label><span class="mandatoryStar">*</span>To Be</label>
                                    <input id="add-us-NfrToBe" class="form-control form-control-sm us-nfr-mandatory add-us-input-txt" placeholder="5 ms.." />
                                </div>
                            </div>
                        </div>
                        <div class="row Relations-Related-Items userstories-us-input" style="display:none;">
                            <div class="col-md-8" style="">
                                <label><span class="mandatoryStar" style="display:none;">*</span>Related Stories</label><br />
                                <input type="text" id="add-us-UserStoriesTags" data-role="tagsinput" class="form-control form-control-sm us-relations-input add-us-input-tags" placeholder="Add Story">
                            </div>
                            <div class="col-md-4">
                                <label>User Stories</label>
                                <select id="add-us-UserStories" onchange="appendTagsToUSTags($(this));" class="form-control form-control-sm add-us-input-ddm"></select>
                            </div>
                        </div>
                        <div class="standard-us-input">
                            <div class="row">
                                <div class="col-md-4">
                                    <label><span class="mandatoryStar">*</span>As a</label>
                                    <input id="add-us-AsA" type="text" class="form-control form-control-sm us-fr-standard-mandatory add-us-input-txt" />
                                </div>
                                <div class="col-md-4">
                                    <label><span class="mandatoryStar">*</span>I wish</label>
                                    <input id="add-us-IWish" type="text" class="form-control form-control-sm us-fr-standard-mandatory add-us-input-txt" />
                                </div>
                                <div class="col-md-4">
                                    <label><span class="mandatoryStar">*</span>So that</label>
                                    <input id="add-us-SoThat" type="text" class="form-control form-control-sm us-fr-standard-mandatory add-us-input-txt" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="module-us-input Relations-Related-Items" style="display:none;">
                                    <label><span class="mandatoryStar" style="display:none;">*</span>Module</label>
                                    <select id="add-us-Module" class="form-control form-control-sm us-relations-input add-us-input-ddm"></select>
                                </div>
                                <div class="epic-us-input Relations-Related-Items" style="display:none;">
                                    <label><span class="mandatoryStar" style="display:none;">*</span>Epic Name</label>
                                    <select id="add-us-Epic" class="form-control form-control-sm us-relations-input add-us-input-ddm"></select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="nfr-us-input">
                                    <label><span class="mandatoryStar">*</span>NFR Type</label>
                                    <select id="add-us-NFR" class="form-control form-control-sm us-nfr-mandatory us-relations-inputs add-us-input-ddm"></select>
                                </div>
                            </div>
                            <div class="text-left" style="width:250px;margin-left:20px;">
                                <br>
                                <button onclick="submitNewUserStory();" class="btn btn-success btn-sm" style="width:30%;margin-top:5px;">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 p-4 contentDiv" style="height: 100%;overflow-y: auto;display: none;" id="TasksContentDiv">
                    <div class="table-responsive p-3" style="max-height: 100%;">
                        <div class="row p-1">
                            <div class="col-md-4">
                                <label>User-Story ID</label>
                                <input id="srch-task-UserStoryID" type="text" placeholder="123-cb-24, 123, ..... etc" class="form-control form-control-sm" />
                            </div>
                            <div class="col-md-4">
                                <label>Task ID</label>
                                <input id="srch-task-ID" type="text" placeholder="123-cb-24, 123, ..... etc" class="form-control form-control-sm" />
                            </div>
                            <div class="col-md-4">
                                <label>Status</label>
                                <select id="srch-task-Status" class="form-control form-control-sm"></select>
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col-md-4">
                                <label>Created By</label>
                                <select id="srch-task-CreatedBy" class="form-control form-control-sm"></select>
                            </div>
                            <div class="col-md-4 offset-md-4 text-center">
                                <button onclick="SearchTasks();" class="btn btn-success btn-sm" style="width:50%;float:right;position: relative;bottom: -30px;">Search</button>
                            </div>
                        </div>
                        <br>
                        <div class="Table-Pagination">
                            <div class="TP-Row">
                                <div class="TP-PageIndex-Container">
                                    <label>Page:</label>
                                    <select></select>
                                </div>
                                <div class="TP-IPP-Container">
                                    <label>Items Per Page:</label>
                                    <select></select>
                                </div>
                            </div>
                        </div>
                        <table class="table table-bordered table-hover table-sm">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Title</th>
                                    <th scope="col">Status</th>
                                    <th scope="col">Created By</th>
                                    <th scope="col">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="tklTableBody">
                            </tbody>
                        </table>
                        <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Proj Tasks');">Export</button>

                    </div>
                    <hr>
                    <div class="col-md-12 Add-New-Task-Container">
                        <div class="com-md-12 text-center">
                            <h4>Add New Task</h4>
                            <hr style="width: 50%;">
                        </div>
                        <div class="row p-1">
                            <div class="col-md-4">
                                <label><span class="mandatoryStar">*</span>Title</label>
                                <input id="add-tk-Title" type="text" class="form-control form-control-sm add-task-mandatory-field add-task-input-txt" />
                            </div>
                            <div class="col-md-4">
                                <label>Type Of Requirement</label>
                                <select id="add-tk-ReqType" class="form-control form-control-sm add-task-input-ddm"></select>
                            </div>
                            <div class="col-md-4">
                                <label><span class="mandatoryStar">*</span>Status</label>
                                <select id="add-tk-Status" class="form-control form-control-sm add-task-input-ddm add-task-mandatory-field"></select>
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col-md-12">
                                <label><span class="mandatoryStar">*</span>Description</label>
                                <textarea id="add-tk-Description" rows="1" class="form-control form-control-sm add-task-input-txt add-task-mandatory-field"></textarea>
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col-md-4">
                                <label>Priority</label>
                                <select id="add-tk-Priority" class="form-control form-control-sm add-task-input-ddm"></select>
                            </div>
                            <div class="col-md-4">
                                <label style="width:100%;">Attachment <i title="Reset Inserted Files!" onclick="$('#add-tk-Attachments').val('');$('.custom-file-label').text('Choose Files');" style="cursor:pointer;float:right;color:dodgerblue;margin-top:5px;" class="fa fa-refresh"></i></label>
                                <div class="custom-file">
                                    <input onchange="$('.custom-file-label').text('Hover To View Files....');" type="file" multiple class="custom-file-input my-custom-file-input add-task-input-attach" id="add-tk-Attachments">
                                    <label class="custom-file-label" for="customFile" style="height:32.5px;">Choose Files</label>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label><span class="mandatoryStar">*</span>User Story</label>
                                <select id="add-tk-UserStory" class="form-control form-control-sm add-task-input-ddm add-task-mandatory-field"></select>
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col-md-4">
                                <label>Assigned To</label>
                                <select id="add-tk-Users" onchange="appendTagsToAssigedATKUsersTags($(this));" class="form-control form-control-sm add-task-input-ddm"></select>
                            </div>
                            <div class="col-md-8">
                                <label>Assigned Users</label>
                                <input id="add-tk-AssignedUsers" data-role="tagsinput" class="form-control form-control-sm" placeholder="Select From Dropdown" />
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col-md-4 offset-md-8">
                                <div class="text-right" style="margin-left:0px;">
                                    <button onclick="submitNewTask();" class="btn btn-success btn-sm" style="width:30%;margin-top:7px;">Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 p-4 contentDiv" style="height: 100%;overflow-y: auto;display: none;" id="Product-BacklogContentDiv">
                    <p style="margin:0;"><strong>Unassigned User Stories:</strong></p>
                    <hr style="width: 20%;position: relative;left:0;text-align: left;margin:10px 0;">
                    <div class="table-responsive" style="max-height: 55%;">
                        <div class="Table-Pagination" style="float:right;">
                            <div class="TP-Row">
                                <div class="TP-PageIndex-Container">
                                    <label>Page:</label>
                                    <select></select>
                                </div>
                                <div class="TP-IPP-Container">
                                    <label>Items Per Page:</label>
                                    <select></select>
                                </div>
                            </div>
                        </div>
                        <table class="table table-bordered table-hover table-sm">
                            <thead>
                                <tr>
                                    <th scope="col" hidden>#</th>
                                    <th scope="col">Select</th>
                                    <th scope="col">U.S Title</th>
                                    <th scope="col">Status</th>
                                    <th scope="col">Created By</th>
                                </tr>
                            </thead>
                            <tbody id="pbluslTbaleBody">

                                <tr>
                                    <th scope="row">1</th>
                                    <td><input type="checkbox"></td>
                                    <td>U.S 1</td>
                                    <td>Done</td>
                                    <td>Sprint 1</td>
                                    <td><button class="btn btn-sm btn-secondary">View</button> <button class="btn btn-sm btn-danger">Delete</button></td>
                                </tr>
                                <tr>
                                    <th scope="row">2</th>
                                    <td><input type="checkbox"></td>
                                    <td>U.S 2</td>
                                    <td>Open</td>
                                    <td>Sprint 1</td>
                                    <td><button class="btn btn-sm btn-secondary">View</button> <button class="btn btn-sm btn-danger">Delete</button></td>
                                </tr>
                                <tr>
                                    <th scope="row">3</th>
                                    <td><input type="checkbox"></td>
                                    <td>U.S 3</td>
                                    <td>Done</td>
                                    <td>Sprint 3</td>
                                    <td><button class="btn btn-sm btn-secondary">View</button> <button class="btn btn-sm btn-danger">Delete</button></td>
                                </tr>
                                <tr>
                                    <th scope="row">4</th>
                                    <td><input type="checkbox"></td>
                                    <td>U.S 4</td>
                                    <td>Open</td>
                                    <td>Sprint 3</td>
                                    <td><button class="btn btn-sm btn-secondary">View</button> <button class="btn btn-sm btn-danger">Delete</button></td>
                                </tr>
                                <tr>
                                    <th scope="row">5</th>
                                    <td><input type="checkbox"></td>
                                    <td>U.S 5</td>
                                    <td>Done</td>
                                    <td>Sprint 4</td>
                                    <td><button class="btn btn-sm btn-secondary">View</button> <button class="btn btn-sm btn-danger">Delete</button></td>
                                </tr>
                                <tr>
                                    <th scope="row">6</th>
                                    <td><input type="checkbox"></td>
                                    <td>U.S 6</td>
                                    <td>Done</td>
                                    <td>Sprint 5</td>
                                    <td><button class="btn btn-sm btn-secondary">View</button> <button class="btn btn-sm btn-danger">Delete</button></td>
                                </tr>

                            </tbody>
                        </table>
                        <button class="btn btn-sm btn-success m-2" onclick="tableToExcel($(this).prev()[0], 'Project Backlog');">Export</button>

                    </div>

                    <hr>

                    <p style="margin:0;"><strong>Assign Selected U.S To Sprints:</strong></p>
                    <hr style="width: 20%;position: relative;left:0;text-align: left;margin:10px 0;">
                    <div class="col-md-12" style="height: auto;">
                        <div class="row p-4">
                            <div class="col-md-3 offset-md-1 text-right">
                                <label>Choose Sprint:</label>
                            </div>
                            <div class="col-md-3">
                                <select id="pbl-Sprint" class="form-control form-control-sm">
                                </select>
                            </div>

                            <div class="col-md-2 p-0" style="position: relative;">
                                <button onclick="assignPblUsToSprint();" class="btn btn-success btn-sm" style="position: absolute;bottom: 0;width: 50%;margin-left: 21%;">Assign</button>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-md-12 p-0 contentDiv" style="height: 100%;overflow-y: auto;display: none;" id="Statistical-ReportsContentDiv">
                    <div class="col-md-12" style="padding:20px 30px 0 30px;">
                        <div class="col-md-4">
                            <label><strong style="color: #666;">Select Report</strong></label>
                            <select onchange="handleSRSelection($(this).val());" class="form-control form-control-sm">
                                <option value="statRepByReqContainerSelected" selected>US By Requirement</option>
                                <option value="statRepByStatusContainerSelected">US By Status</option>
                                <option value="statRepByPriorityContainerSelected">US By Priority</option>
                            </select>
                        </div>
                        <hr style="margin:10px 0 5px 0;" />
                        <div class="row text-center"style="padding:0px 20px 0 20px;font-size:14px;">
                            <div class="col-md-4 text-left"><strong style="color: #666;">Project-ID: </strong><small id="sr-header-projectID">23553</small></div>
                            <div class="col-md-4 text-center"><strong style="color: #666;">Project: </strong><small id="sr-header-project">Project 1</small></div>
                            <div class="col-md-4 text-right"><strong style="color:#666;">Domain: </strong><small id="sr-header-domain">Domain 1</small></div>
                        </div>
                        <hr style="margin:5px 0 10px 0;" />
                    </div>
                    <div class="col-md-12 Statistical-Report-Chart-Container" id="statRepByReqContainer" style="padding:0px 30px 0 30px;">
                        <div class="col-md-8 offset-md-2">
                            <div id="statRepByReq" style="width: 100%; height: 400px;"></div>
                        </div>
                        <hr />
                        <div class="row p-1">
                            <div class="col-md-4">
                                <label>Related To</label>
                                <select onchange="sbUserstoryObj.RelatedTo = $(this).val();" id="srbr-RelatedTo" class="form-control form-control-sm"></select>
                            </div>
                            <div class="col-md-4">
                                <label>Module</label>
                                <select onchange="sbUserstoryObj.ModuleID = $(this).val();" id="srbr-Module" class="form-control form-control-sm"></select>
                            </div>
                            <div class="col-md-4">
                                <label>Epic</label>
                                <select onchange="sbUserstoryObj.EpicID = $(this).val();" id="srbr-Epic" class="form-control form-control-sm"></select>
                            </div>
                        </div>
                        <div class="row p-1" style="margin-bottom:50px;">
                            <div class="col-md-4">
                                <label>Assigned To</label>
                                <select id="srbr-AssignedTo" class="form-control form-control-sm"></select>
                            </div>
                            <div class="col-md-4">
                                <label>Created By</label>
                                <select onchange="sbUserstoryObj.CreatedBy = $(this).val();" id="srbr-CreatedBy" class="form-control form-control-sm"></select>
                            </div>
                            <div class="col-md-4 text-right">
                                <button onclick="drawSRBRChart();" class="btn btn-sm btn-success" style="margin-top:35px;">Generate Chart</button>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12 Statistical-Report-Chart-Container" id="statRepByStatusContainer" style="display:none; padding:0px 30px 0 30px;">
                        <div class="col-md-10 offset-md-2">
                            <div id="statRepByStatus" style="width: 100%; height: 400px;"></div>
                        </div>
                        <hr />
                        <div class="row p-1" style="margin-bottom:50px;">
                            <div class="col-md-4">
                                <label>Requirement Type</label>
                                <select id="srbs-ReqType" onchange="sbUserstoryObj.RequirementType = $(this).val();" class="form-control form-control-sm"></select>
                            </div>
                            <div class="col-md-4 offset-md-4 text-right">
                                <button onclick="drawSRBSChart();" class="btn btn-sm btn-success" style="margin-top:35px;">Generate Chart</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12 Statistical-Report-Chart-Container" id="statRepByPriorityContainer" style="display: none; padding: 0px 30px 0 30px;">
                        <div class="col-md-10 offset-md-2">
                            <div id="statRepByPriority" style="width: 100%; height: 400px;"></div>
                        </div>
                        <hr />
                        <div class="row p-1" style="margin-bottom:50px;">
                            <div class="col-md-4">
                                <label>Requirement Type</label>
                                <select id="srbp-ReqType" onchange="sbUserstoryObj.RequirementType = $(this).val();" class="form-control form-control-sm"></select>
                            </div>
                            <div class="col-md-4 offset-md-4 text-right">
                                <button onclick="drawSRBPChart();" class="btn btn-sm btn-success" style="margin-top:35px;">Generate Chart</button>
                            </div>
                        </div>
                    </div>

                </div>
            </fieldset>
        </div>
    </div>
</div>

<div id="uusPanelContainer">
    <div id="uusPanel" style="">
        <i class="fa fa-close" onclick="$('#uusPanelContainer').fadeOut('fast');"></i>
        <fieldset style="width: 90%; margin: 20px auto; height: calc(100% - 40px); overflow: hidden; overflow-y: auto; padding: 0 0 50px 0;">
            <legend>Update User Story</legend>
            <div class="container" style="margin-top:10px;">
                <div class="row p-1">
                    <div class="col-md-2">
                        <label>U.S ID</label>
                        <input id="uus-ID" type="text" class="form-control form-control-sm" disabled />
                    </div>
                    <div class="col-md-4">
                        <label>Type Of Requirement</label>
                        <select id="uus-ReqType" class="form-control form-control-sm" disabled><</select>
                    </div>
                    <div class="col-md-3">
                        <label>Priority</label>
                        <select onchange="updatedUserStory[0].UsPriority = $(this).val();" id="uus-Priority" class="form-control form-control-sm"></select>
                    </div>
                    <div class="col-md-3">
                        <label><span class="mandatoryStar">*</span>Status</label>
                        <select onchange="updatedUserStory[0].StatusID = $(this).val();" id="uus-Status" class="form-control form-control-sm uus-mandatory-field"></select>
                    </div>
                </div>
                <div class="row p-1">
                    <div class="col-md-4">
                        <label>Assigned To</label>
                        <select id="uus-Users" onchange="appendTagsToAssigedUUSUsersTags($(this));" class="form-control form-control-sm"></select>
                    </div>
                    <div class="col-md-8">
                        <label class="col-md-12 text-center">Assigned Users</label>
                        <input id="uus-AssignedUsers" data-role="tagsinput" type="text" class="form-control form-control-sm" placeholder="Select From Dropdown" />
                    </div>
                </div>
                <div class="row p-1">
                    <div class="col-md-4">
                        <label><span class="mandatoryStar">*</span>Title</label>
                        <input onchange="updatedUserStory[0].FRS_Title = $(this).val();" id="uus-Title" type="text" class="form-control form-control-sm uus-mandatory-field" />
                    </div>
                    <div class="col-md-4">
                        <label>Assign To Sprint</label>
                        <select onchange="updatedUserStory[0].SprintID = $(this).val();" id="uus-Sprint" class="form-control form-control-sm"></select>
                    </div>
                    <div class="col-md-4">
                        <label>Attachment</label>
                        <div class="custom-file">
                            <input onchange="$('.custom-file-label').text('Hover To View Files....');" type="file" multiple class="custom-file-input my-custom-file-input add-us-input-attach" id="update-us-Attachments">
                            <label class="custom-file-label" for="customFile" style="height:32.5px;">Choose Files</label>
                        </div>
                    </div>
                </div>
                <div class="row p-1">
                    <div class="col-md-12 uus-functional-req-item conditional-item uus-Custom-item uus-func-req-type-item">
                        <label class="col-md-12 text-center"><span class="mandatoryStar">*</span>Custom User Story</label>
                        <input onchange="updatedUserStory[0].FRC_CustomUserStory = $(this).val();" id="uus-CustomUserStory" type="text" class="form-control form-control-sm uus-mandatory-field" />
                    </div>
                    <div class="col-md-12 conditional-item uus-nfr-req-item">
                        <label class="col-md-12 text-center"><span class="mandatoryStar">*</span>Description</label>
                        <input onchange="updatedUserStory[0].NFR_Description = $(this).val();" id="uus-Description" type="text" class="form-control form-control-sm uus-mandatory-field" />
                    </div>
                    <div class="col-md-12 conditional-item uus-functional-req-item uus-Standard-item uus-func-req-type-item">
                        <label class="col-md-12 text-center">Acceptance Criteria</label>
                        <input onchange="updatedUserStory[0].FRS_AcceptanceCriteria = $(this).val();" id="uus-AcceptanceCriteria" type="text" class="form-control form-control-sm" />
                    </div>
                </div>
                <div class="row p-1">
                    <div class="col-md-4  uus-functional-req-item conditional-item">
                        <label>Type Of U.S</label>
                        <select disabled id="uus-USType" class="form-control form-control-sm"></select>
                    </div>
                    <div class="col-md-4 conditional-item uus-nfr-req-item">
                        <label>Pos/Neg U.S</label>
                        <select onchange="updatedUserStory[0].NFR_PosOrNeg = $(this).val();" id="uus-Positivity" class="form-control form-control-sm"></select>
                    </div>
                    <div class="col-md-4">
                        <label>Related To</label>
                        <select onchange="updatedUserStory[0].RelatedTo = $(this).val();" disabled id="uus-Relation" class="form-control form-control-sm"></select>
                    </div>
                    <div class="col-md-4 uus-relation-item uus-Module-rel-item">
                        <label>Module</label>
                        <select onchange="updatedUserStory[0].ModuleID = $(this).val();" id="uus-Module" class="form-control form-control-sm"></select>
                    </div>
                    <div class="col-md-4 conditional-item uus-nfr-req-item pt-1">
                        <label>For</label>
                        <input type="text" onchange="updatedUserStory[0].NFR_For = $(this).val();" id="uus-NfrFor" class="form-control form-control-sm"/>
                    </div>
                    <div class="col-md-4 conditional-item uus-nfr-req-item pt-1">
                        <label>I Want</label>
                        <input type="text" onchange="updatedUserStory[0].NFR_IWant = $(this).val();" id="uus-NfrIWant" class="form-control form-control-sm" />
                    </div>
                    <div class="col-md-4 conditional-item uus-nfr-req-item pt-1">
                        <label>To Be</label>
                        <input type="text" onchange="updatedUserStory[0].NFR_ToBe = $(this).val();" id="uus-NfrToBe" class="form-control form-control-sm" />
                    </div>
                    <div class="col-md-4 uus-relation-item uus-Epic-rel-item">
                        <label>Epic</label>
                        <select onchange="updatedUserStory[0].EpicID = $(this).val();" id="uus-Epic" class="form-control form-control-sm"></select>
                    </div>
                    <div class="col-md-4 uus-relation-item uus-System-rel-item">
                        <label style="color:transparent;">Nothing</label>
                        <input disabled class="form-control form-control-sm" />
                    </div>
                    <div class="col-md-4 uus-relation-item uus-UserStory-rel-item">
                        <label>User Stories</label>
                        <select onchange="appendTagsToRelatedUUSUSTags($(this));" id="uus-UserStories" class="form-control form-control-sm"></select>
                    </div>
                </div>
                <div class="row p-1 uus-relation-item uus-UserStory-rel-item">
                    <div class="col-md-12">
                        <label class="col-md-12 text-center">Related Stories</label>
                        <input id="uus-RelatedUserStories" type="text" data-role="tagsinput" class="form-control form-control-sm" />
                    </div>
                </div>
                <div class="row p-1 conditional-item uus-functional-req-item uus-Standard-item uus-func-req-type-item">
                    <div class="col-md-4">
                        <label><span class="mandatoryStar">*</span>AS a</label>
                        <input onchange="updatedUserStory[0].FRS_AsA = $(this).val();" id="uus-AsA" class="form-control form-control-sm uus-mandatory-field" />
                    </div>
                    <div class="col-md-4">
                        <label><span class="mandatoryStar">*</span>I wish</label>
                        <input onchange="updatedUserStory[0].FRS_IWish = $(this).val();" id="uus-IWish" class="form-control form-control-sm uus-mandatory-field" />
                    </div>
                    <div class="col-md-4">
                        <label><span class="mandatoryStar">*</span>So that</label>
                        <input onchange="updatedUserStory[0].FRS_SoThat = $(this).val();" id="uus-SoThat" class="form-control form-control-sm uus-mandatory-field" />
                    </div>
                </div>
                <div class="row p-1">
                    <div class="col-md-8 conditional-item uus-functional-req-item">
                    </div>
                    <div class="col-md-4 conditional-item uus-nfr-req-item">
                        <label class="col-md-12 text-center"><span class="mandatoryStar">*</span>NFR Type</label>
                        <select onchange="updatedUserStory[0].NFR_NFRID = $(this).val();" id="uus-nfrType" class="form-control form-control-sm uus-mandatory-field"></select>
                    </div>
                    <div class="col-md-4 conditional-item uus-nfr-req-item">
                    </div>
                    <div class="col-md-4">
                        <div class="text-right" style="margin-left:0px;">
                            <br>
                            <button onclick="updateUserStory();" class="btn btn-success btn-sm" style="width:30%;margin-top:7px;">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>

    </div>
</div>

<div id="utkPanelContainer">
    <div id="utkPanel" style="">
        <i class="fa fa-close" onclick="$('#utkPanelContainer').fadeOut('fast');"></i>
        <fieldset style="width: 90%; margin: 20px auto; height: calc(100% - 40px); overflow: hidden; overflow-y: auto; padding: 0 0 50px 0;">
            <legend>Update Task</legend>
            <div class="container" style="margin-top:10px;">
                <div class="row p-1">
                    <div class="col-md-4">
                        <label><span class="mandatoryStar">*</span>Title</label>
                        <input onchange="updatedTask.Title = $(this).val();" id="edit-tk-Title" type="text" class="form-control form-control-sm edit-task-mandatory-field edit-tasks-input-text" />
                    </div>
                    <div class="col-md-4">
                        <label>Type Of Requirement</label>
                        <select onchange="updatedTask.RequirementType = $(this).val();" id="edit-tk-ReqType" class="form-control form-control-sm edit-tasks-input-ddm"></select>
                    </div>
                    <div class="col-md-4">
                        <label><span class="mandatoryStar">*</span>Status</label>
                        <select onchange="updatedTask.Status = $(this).val();" id="edit-tk-Status" class="form-control form-control-sm edit-tasks-input-ddm edit-task-mandatory-field"></select>
                    </div>
                </div>
                <div class="row p-1">
                    <div class="col-md-12">
                        <label><span class="mandatoryStar">*</span>Description</label>
                        <textarea onchange="updatedTask.Description = $(this).val();" id="edit-tk-Description" rows="1" class="form-control form-control-sm edit-tasks-input-text edit-task-mandatory-field"></textarea>
                    </div>
                </div>
                <div class="row p-1">
                    <div class="col-md-4">
                        <label>Priority</label>
                        <select onchange="updatedTask.Priority = $(this).val();" id="edit-tk-Priority" class="form-control form-control-sm edit-tasks-input-ddm"></select>
                    </div>
                    <div class="col-md-4">
                        <label style="width:100%;">Attachment <i title="Reset Inserted Files!" onclick="$('#edit-us-Attachments').val('');$('.custom-file-label').text('Choose Files');" style="cursor:pointer;float:right;color:dodgerblue;margin-top:5px;" class="fa fa-refresh"></i></label>
                        <div class="custom-file">
                            <input onchange="$('.custom-file-label').text('Hover To View Files....');" type="file" multiple class="custom-file-input my-custom-file-input edit-tasks-input-attach" id="edit-tk-Attachments">
                            <label class="custom-file-label" for="customFile" style="height:32.5px;">Choose Files</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label><span class="mandatoryStar">*</span>User Story</label>
                        <select onchange="updatedTask.AssignedUserStory = $(this).val();" id="edit-tk-UserStory" class="form-control form-control-sm edit-tasks-input-ddm edit-task-mandatory-field"></select>
                    </div>
                </div>
                <div class="row p-1">
                    <div class="col-md-4">
                        <label>Assigned To</label>
                        <select id="edit-tk-Users" onchange="appendTagsToAssigedETKUsersTags($(this));" class="form-control form-control-sm edit-tasks-input-ddm"></select>
                    </div>
                    <div class="col-md-8">
                        <label>Assigned Users</label>
                        <input id="edit-tk-AssignedUsers" data-role="tagsinput" class="form-control form-control-sm" placeholder="Select From Dropdown" />
                    </div>
                </div>
                <div class="row p-1">
                    <div class="col-md-4 offset-md-8">
                        <div class="text-right" style="margin-left:0px;">
                            <button onclick="updateTask();" class="btn btn-success btn-sm" style="width:30%;margin-top:7px;">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>

    </div>
</div>

<script>

    window.onresize = function () {
        chartSRBR.draw(datachartSRBR, google.charts.Bar.convertOptions(optionschartSRBR));
        chartSRBS.draw(datachartSRBS, optionschartSRBS);
        chartSRBP.draw(datachartSRBP, optionschartSRBP);
        adjustListMargins('#ProjectComponents');
    }

    var projectID = @ViewBag.ProjectID;

    var tmpProjectsList = new Array();
    var tmpEpicsList = new Array();
    var tmpSprintsList = new Array();
    var userStoriesObjectReference = new Array();
    var userStoriesAssignedItemsReference = new Array();
    var updatedUserStory = new Array();
    var tasksObjectReference = new Array();
    var tasksAssignedItemsReference = new Array();
    var updatedTask = 0;
    var selectedPblUserstoriesArray = new Array();
    var sbUserstoryObj = null;


    var datachartSRBR; var optionschartSRBR; var chartSRBR;
    var datachartSRBS; var optionschartSRBS; var chartSRBS;
    var datachartSRBP; var optionschartSRBP; var chartSRBP;

    function suspendProject() {
        var conf = confirm("Confirm Deleting Project With The ID: " + projectID);
        if (!conf)
            return;
        $.ajax({
            type: "POST",
            url: "/Project/EraseProject",
            data: "{'proj':" + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    window.location = "/Home";
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function viewProjGiUpdatePanel(projIndex) {

        $('#upp-input-ProjectID').val(tmpProjectsList[projIndex].ID);
        $('#upp-input-ProjectName').val(tmpProjectsList[projIndex].Name);
        getDomainsForProjGiUpdate(tmpProjectsList[projIndex].Domain);
        $('#upp-input-CName').val(tmpProjectsList[projIndex].CustomerName);
        $('#upp-input-CPhone').val(tmpProjectsList[projIndex].CustomerPhone);
        $('#upp-input-CEmail').val(tmpProjectsList[projIndex].CustomerEmail);
        $('#upp-input-StartDate').val(tmpProjectsList[projIndex].StartDate);
        $('#upp-input-EndDate').val(tmpProjectsList[projIndex].EndDate);
        getStatusForProjGiUpdate(tmpProjectsList[projIndex].Status);
        getSystemTypesForProjGiUpdate(tmpProjectsList[projIndex].SystemType);
        $('#upp-input-Description').val(tmpProjectsList[projIndex].Description);
        $('#upp-btn-Submit').attr("onclick", "updateProjGi(" + projIndex + ");");
        $('#updateProjGiPanel').fadeIn();
    }

    function viewEpicUpdatePanel(epicIndex, domain) {

        $('#uep-input-ID').val(tmpEpicsList[epicIndex].ID);
        $('#uep-input-Name').val(tmpEpicsList[epicIndex].Name);
        getModules(domain + "-" + tmpEpicsList[epicIndex].Module);
        $('#uep-btn-Submit').attr("onclick", "updateEpic(" + epicIndex + ");");

        $('#updateEpicPanel').fadeIn();
    }

    function viewSprintUpdatePanel(sprintIndex) {
        $('#usp-input-ID').val(tmpSprintsList[sprintIndex].ID);
        $('#usp-input-Name').val(tmpSprintsList[sprintIndex].Name);
        $('#usp-input-StartDate').val(tmpSprintsList[sprintIndex].StartDate);
        $('#usp-input-EndDate').val(tmpSprintsList[sprintIndex].EndDate);
        $('#usp-input-Goal').val(tmpSprintsList[sprintIndex].Goal);
        getStatus("#usp-input-Status", tmpSprintsList[sprintIndex].Status);
        $('#usp-btn-Submit').attr("onclick", "updateSprint(" + sprintIndex + ");");
        $('#updateSprintPanel').fadeIn();

    }

    function updateProjGi(index) {

        var mandatoryInserted = true;
        $('.upp-mandatory-field').each(function (i, obj) {
            if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                mandatoryInserted = false;
            }
        });

        if (!mandatoryInserted) {
            alert("Please Insert Mandatory Fields!");
            return;
        }

        tmpProjectsList[index].ID = $('#upp-input-ProjectID').val();
        tmpProjectsList[index].Name = $('#upp-input-ProjectName').val();
        tmpProjectsList[index].Domain = $('#upp-input-ProjectDomain').val();
        tmpProjectsList[index].CustomerName = $('#upp-input-CName').val();
        tmpProjectsList[index].CustomerPhone = $('#upp-input-CPhone').val();
        tmpProjectsList[index].CustomerEmail = $('#upp-input-CEmail').val();
        tmpProjectsList[index].StartDate = $('#upp-input-StartDate').val();
        tmpProjectsList[index].EndDate = $('#upp-input-EndDate').val();
        tmpProjectsList[index].Status = $('#upp-input-Status').val();
        tmpProjectsList[index].SystemType = $('#upp-input-SystemType').val();
        tmpProjectsList[index].Description = $('#upp-input-Description').val();

        if (!validateEmail(tmpProjectsList[index].CustomerEmail) && tmpProjectsList[index].CustomerEmail != "") {
            alert("Customer Email is not valid!");
            return;
        }

        //var todayDate = formatDate(new Date());
        var startDate = tmpProjectsList[index].StartDate;
        var endDate = tmpProjectsList[index].EndDate;

        /*if ((endDate != "" && endDate < todayDate) || (startDate != "" && startDate < todayDate)) {
            alert("Old Dates Are Not Allowed!.");
            return;
        }*/

        if ((endDate < startDate || endDate == startDate) && (startDate != "" || endDate != "")) {
            alert("End Date Must Be After Start Date!.");
            return;
        }

        var stringfiedProjObject = JSON.stringify(tmpProjectsList[index]);

        $.ajax({
            type: "POST",
            url: "/Project/UpdateProject",
            data: "{'updatedProject':" + stringfiedProjObject + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    $('#updateProjGiPanel').hide();
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    getGeneralInfo(projectID);
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                    //getGeneralInfo(projectID);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function updateEpic(index) {

        var mandatoryInserted = true;
        $('.uep-mandatory-field').each(function (i, obj) {
            if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                mandatoryInserted = false;
            }
        });

        if (!mandatoryInserted) {
            alert("Please Insert Mandatory Fields!");
            return;
        }

        tmpEpicsList[index].Name = $('#uep-input-Name').val();
        tmpEpicsList[index].Module = $('#uep-input-Module').val();
        var stringfiedEpicObject = JSON.stringify(tmpEpicsList[index]);

        $.ajax({
            type: "POST",
            url: "/Project/UpdateProjectEpic",
            data: "{'updatedEpic':" + stringfiedEpicObject + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    $('#updateEpicPanel').hide();
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    getProjectEpics();
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function deleteEpic(index) {
        var epicID = tmpEpicsList[index].ID;
        var epicText = tmpEpicsList[index].Name;

        let deletedEpic = confirm("Confirm Deleting Epic:\n\"" + epicText + "\" With The ID \"" + epicID + "\"");
        if (!deletedEpic) {
            return;
        } else {
            $.ajax({
                type: "POST",
                url: "/Project/DeleteEpic",
                data: "{'epicID':" + epicID + "}",
                contentType: "application/json; charset=utf-8",
                dataType: "JSON",
                success: function (dataObject) {
                    if (dataObject.successFlag) {
                        alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                        getProjectEpics();
                    } else {
                        alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                    }
                },
                error: function (xhr, status, error) {
                    alert("Error: " + xhr.responseText);
                }
            });
        }
    }

    function updateSprint(index) {

        var mandatoryInserted = true;
        $('.usp-mandatory-field').each(function (i, obj) {
            if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                mandatoryInserted = false;
            }
        });

        if (!mandatoryInserted) {
            alert("Please Insert Mandatory Fields!");
            return;
        }

        tmpSprintsList[index].Name = $('#usp-input-Name').val();
        tmpSprintsList[index].StartDate = $('#usp-input-StartDate').val();
        tmpSprintsList[index].EndDate = $('#usp-input-EndDate').val();
        tmpSprintsList[index].Goal = $('#usp-input-Goal').val();
        tmpSprintsList[index].Status = $('#usp-input-Status').val();

        var stringfiedSprintObject = JSON.stringify(tmpSprintsList[index]);

        $.ajax({
            type: "POST",
            url: "/Project/UpdateProjectSprint",
            data: "{'updatedSprint':" + stringfiedSprintObject + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    $('#updateSprintPanel').hide();
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    getProjectSprints();
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function deleteSprint(index) {
        var sprintID = tmpSprintsList[index].ID;
        var sprintText = tmpSprintsList[index].Name;

        let deletedSprint = confirm("Confirm Deleting Sprint:\n\"" + sprintText + "\" With The ID \"" + sprintID + "\"");
        if (!deletedSprint) {
            return;
        } else {
            $.ajax({
                type: "POST",
                url: "/Project/DeleteProjectSprint",
                data: "{'sprintID':" + sprintID + "}",
                contentType: "application/json; charset=utf-8",
                dataType: "JSON",
                success: function (dataObject) {
                    if (dataObject.successFlag) {
                        alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                        getProjectSprints();
                    } else {
                        alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                    }
                },
                error: function (xhr, status, error) {
                    alert("Error: " + xhr.responseText);
                }
            });
        }
    }

    function assignAndUnassignUserToProject(isAssign, userID) {
        $.ajax({
            type: "POST",
            url: "/Project/AssignUnAssignUserToProject",
            data: "{'assignFlag': " + isAssign + ",'userID': " + userID + ", 'projectID':" + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    getUsersList();
                } else {
                    alert("Status: " + dataObject.status + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function assignAndUnassignModuleToProject(isAssign, moduleID) {
        $.ajax({
            type: "POST",
            url: "/Project/AssignUnAssignModuleToProject",
            data: "{'assignFlag': " + isAssign + ",'moduleID': " + moduleID + ", 'projectID':" + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    getModulesList();
                } else {
                    alert("Status: " + dataObject.status + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function assignAndUnassignNFRToProject(isAssign, nfr) {
        $.ajax({
            type: "POST",
            url: "/NFRs/AssignUnAssignNFRToProject",
            data: "{'assignFlag': " + isAssign + ",'nfr': '" + nfr + "', 'projectID':" + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    getNFRs();
                } else {
                    alert("Status: " + dataObject.status + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUsersList() {
        var filterVal = $("#g-i-users-FilterFlag").val();

        $("#ulTableBody").html("");

        $.ajax({
            type: "POST",
            url: "/Project/GetUsersList",
            data: "{'filterVal': " + filterVal + ", 'projectID':" + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    for (var i = 0; i < dataObject.returnedObject.length; i++) {

                        $("#ulTableBody").append("<tr><th scope= 'row' hidden>" + dataObject.returnedObject[i].ID + "</th>" +
                            "<td>" + dataObject.returnedObject[i].Email + "</td> " +
                            "<td>" + dataObject.returnedObject[i].Fullname + "</td> " +
                            "<td>" + dataObject.returnedObject[i].Title + "</td> " +
                            "<td><button class='btn btn-sm btn-danger' onclick='assignAndUnassignUserToProject(false," + dataObject.returnedObject[i].ID +");'>Unassign</button></td>" +
                            "</tr>");
                    }
                    for (var i = 0; i < dataObject.extraObject.length; i++) {

                        $("#ulTableBody").append("<tr><th scope= 'row' hidden>" + dataObject.extraObject[i].ID + "</th>" +
                            "<td>" + dataObject.extraObject[i].Email + "</td> " +
                            "<td>" + dataObject.extraObject[i].Fullname + "</td> " +
                            "<td>" + dataObject.extraObject[i].Title + "</td> " +
                            "<td><button class='btn btn-sm btn-secondary' onclick='assignAndUnassignUserToProject(true," + dataObject.extraObject[i].ID + ");'>Assign</button></td>" +
                            "</tr>");
                    }

                    $(".Table-Pagination")[0].UpdateTablePagination(null, 0, 5);
                } else {
                    alert("Status: " + dataObject.status + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getModulesList() {

        $("#pmlTableBody").html("");
        $("#mlTableBody").html("");

        $.ajax({
            type: "POST",
            url: "/Modules/GetProjectModules",
            data: "{'projectID':" + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    for (var i = 0; i < dataObject.returnedObject.length; i++) {

                        $("#mlTableBody").append("<tr><th scope= 'row' hidden>" + dataObject.returnedObject[i].ID + "</th>" +
                            "<td>" + dataObject.returnedObject[i].Domain + "</td> " +
                            "<td>" + dataObject.returnedObject[i].Module + "</td> " +
                            "<td><button disabled class='btn btn-sm btn-secondary'>Assign</button></td>" +
                            "</tr>");

                        $("#pmlTableBody").append("<tr><th scope= 'row' hidden>" + dataObject.returnedObject[i].ID + "</th>" +
                            "<td>" + dataObject.returnedObject[i].Domain + "</td> " +
                            "<td>" + dataObject.returnedObject[i].Module + "</td> " +
                            "<td><button class='btn btn-sm btn-danger' onclick='assignAndUnassignModuleToProject(false," + dataObject.returnedObject[i].ID +");'>Remove</button></td>" +
                            "</tr>");
                    }

                    for (var i = 0; i < dataObject.extraObject.length; i++) {
                        $("#mlTableBody").append("<tr><th scope= 'row' hidden>" + dataObject.extraObject[i].ID + "</th>" +
                            "<td>" + dataObject.extraObject[i].Domain + "</td> " +
                            "<td>" + dataObject.extraObject[i].Module + "</td> " +
                            "<td><button class='btn btn-sm btn-secondary' onclick='assignAndUnassignModuleToProject(true," + dataObject.extraObject[i].ID +");'>Assign</button></td>" +
                            "</tr>");
                    }

                    $(".Table-Pagination")[1].UpdateTablePagination(null, 1, 5);
                    $(".Table-Pagination")[2].UpdateTablePagination(null, 2, 5);
                } else {
                    alert("Status: " + dataObject.status + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getGeneralInfo(projID) {

        $.ajax({
            type: "POST",
            url: "/Project/GetSpecificProject",
            data: "{'projID':" + projID+"}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {

                tmpProjectsList = new Array();

                tmpProjectsList[0] = {
                    "ID": dataObject.returnedObject.ID,
                    "Name": dataObject.returnedObject.Name,
                    "Domain": dataObject.returnedObject.Domain,
                    "SystemType": dataObject.returnedObject.SysType,
                    "Status": dataObject.returnedObject.Status,
                    "CustomerName": dataObject.returnedObject.CustomerName,
                    "CustomerPhone": dataObject.returnedObject.CustomerPhone,
                    "CustomerEmail": dataObject.returnedObject.CustomerEmail,
                    "StartDate": dataObject.returnedObject.StartDate,
                    "EndDate": dataObject.returnedObject.EndDate,
                    "Description": dataObject.returnedObject.Description
                }

                $('#pcTitle').text(dataObject.returnedObject.Name);
                $('#pcTitle').attr("title",dataObject.returnedObject.Name);
                $('#display-g-i-CustomerName').text((dataObject.returnedObject.CustomerName == null ? "-" : dataObject.returnedObject.CustomerName));
                $('#display-g-i-CustomerPhone').text((dataObject.returnedObject.CustomerPhone == null ? "-" : dataObject.returnedObject.CustomerPhone));
                $('#display-g-i-CustomerEmail').text((dataObject.returnedObject.CustomerEmail == null ? "-" : dataObject.returnedObject.CustomerEmail));
                $('#display-g-i-ProjectID').text(dataObject.returnedObject.ID);
                $('#display-g-i-ProjectName').text(dataObject.returnedObject.Name);
                $('#display-g-i-ProjectDomain').text(dataObject.returnedObject.Domain);
                $('#display-g-i-StartDate').text((dataObject.returnedObject.StartDate == null ? "-" : dataObject.returnedObject.StartDate));
                $('#display-g-i-EndDate').text((dataObject.returnedObject.EndDate == null ? "-" : dataObject.returnedObject.EndDate));
                $('#display-g-i-CreationDate').text(dataObject.returnedObject.CreationDate);
                $('#display-g-i-ProjectStatus').text(dataObject.returnedObject.Status);
                $('#display-g-i-SystemType').text(dataObject.returnedObject.SysType);
                $('#display-g-i-ProjectDescription').text((dataObject.returnedObject.Description == null ? "-" : dataObject.returnedObject.Description));
                $('#display-g-i-ModulesNum').text(dataObject.extraObject.moulesCount); 
                $('#display-g-i-NFRs').text(dataObject.extraObject.nfrsCount);
                $('#display-g-i-SprintsNum').text(dataObject.extraObject.sprintsCount);

            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });

        getUsersList();
    }

    function getModulesContent(projID) {
        getModulesList();
    }

    function getProjectSprints() {

        $("#slTableBody").html("");

        $.ajax({
            type: "POST",
            url: "/Project/GetProjectSprints",
            data: "{'projectID':" + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                tmpSprintsList = new Array();
                if (dataObject.successFlag) {
                    for (var i = 0; i < dataObject.returnedObject.length; i++) {

                        tmpSprintsList[i] = {
                            "ID": dataObject.returnedObject[i].ID,
                            "ProjectID": dataObject.returnedObject[i].ProjectID,
                            "Name": dataObject.returnedObject[i].Name,
                            "StartDate": dataObject.returnedObject[i].StartDate,
                            "EndDate": dataObject.returnedObject[i].EndDate,
                            "Goal": dataObject.returnedObject[i].Goal,
                            "Status": dataObject.returnedObject[i].Status,
                            "CreationDate": null,
                            "CreatedBy": null
                        }

                        $("#slTableBody").append("<tr><th scope= 'row' hidden>" + dataObject.returnedObject[i].ID + "</th>" +
                            "<td>" + dataObject.returnedObject[i].Name + "</td> " +
                            "<td>" + dataObject.returnedObject[i].StartDate + "</td> " +
                            "<td>" + dataObject.returnedObject[i].EndDate + "</td> " +
                            "<td>" + dataObject.returnedObject[i].Status + "</td> " +
                            "<td>" + (dataObject.returnedObject[i].Goal == null ? "-" : dataObject.returnedObject[i].Goal) + "</td> " +
                            "<td><button class='btn btn-sm btn-secondary' onclick='viewSprintUpdatePanel(" + i + ");'>Update</button> <button onclick='deleteSprint(" + i + ");' class='btn btn-sm btn-danger'>Delete</button></td>" +
                            "</tr>");
                    }
                    $(".Table-Pagination")[8].UpdateTablePagination(null,8,5);
                } else {
                    alert("Status: " + dataObject.status + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function createNewSprint() {

        var name = $("#add-sprint-Name").val();
        var startDate = $("#add-sprint-StartDate").val();
        var endDate = $("#add-sprint-EndDate").val();
        var goal = $("#add-sprint-Goal").val();
        var status = $("#add-sprint-Status").val();

        var mandatoryInserted = true;
        $('.sprint-mandatory-field').each(function (i, obj) {
            if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                mandatoryInserted = false;
            }
        });

        if (!mandatoryInserted) {
            alert("Please Insert Mandatory Fields!");
            return;
        }

        if ((endDate < startDate || endDate == startDate) && (startDate != "" || endDate != "")) {
            alert("End Date Must Be After Start Date!.");
            return;
        }

        var sprintObject = new Array();

        sprintObject[0] = {
            "ID": 0,
            "ProjectID": projectID,
            "Name": name,
            "StartDate": startDate,
            "EndDate": endDate,
            "Goal": goal,
            "Status": status
        }

        var stringfiedSprintObject = JSON.stringify(sprintObject[0]);

        $.ajax({
            type: "POST",
            url: "/Project/CreateNewSprint",
            data: "{'sprint': " + stringfiedSprintObject + ", 'projectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    $('.add-sprint-input-txt').val("");
                    $('.add-sprint-input-ddm').val(0);
                    $('.add-sprint-input-dt').val(null);
                    getProjectSprints();
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getSprintsContent(projID) {
        getStatus("#add-sprint-Status");
        getProjectSprints();
    }

    function getProjectEpics() {

        $("#elTableBody").html("");

        $.ajax({
            type: "POST",
            url: "/Project/GetProjectEpics",
            data: "{'projectID':" + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {

                    tmpEpicsList = new Array();

                    for (var i = 0; i < dataObject.returnedObject.length; i++) {

                        tmpEpicsList[i] = {
                            "ID": dataObject.returnedObject[i].ID,
                            "ProjectID": dataObject.returnedObject[i].ProjectID,
                            "Name": dataObject.returnedObject[i].Name,
                            "Module": dataObject.returnedObject[i].Module
                        }

                        $("#elTableBody").append("<tr><th scope= 'row' hidden>" + dataObject.returnedObject[i].ID + "</th>" +
                            "<td>" + dataObject.returnedObject[i].Name + "</td> " +
                            "<td>" + (dataObject.returnedObject[i].Domain == null ? "" : dataObject.returnedObject[i].Domain) + "-" + (dataObject.returnedObject[i].Module == null ? "-" : dataObject.returnedObject[i].Module) + "</td> " +
                            "<td><button class='btn btn-sm btn-secondary' onclick='viewEpicUpdatePanel(" + i + ",\"" + dataObject.returnedObject[i].Domain + "\");'>Update</button> <button onclick='deleteEpic(" + i + ");' class='btn btn-sm btn-danger'>Delete</button></td>" +
                            "</tr>");
                    }
                    $(".Table-Pagination")[3].UpdateTablePagination(null,3,5);
                } else {
                    alert("Status: " + dataObject.status + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function createNewEpic() {

        var name = $("#add-epic-Name").val();
        var module = $("#add-epic-Module").val();

        var mandatoryInserted = true;
        $('.epic-mandatory-field').each(function (i, obj) {
            if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                mandatoryInserted = false;
            }
        });

        if (!mandatoryInserted) {
            alert("Please Insert Mandatory Fields!");
            return;
        }

        var epicObject = new Array();

        epicObject[0] = {
            "ID": 0,
            "ProjectID": projectID,
            "Name": name,
            "Module": module
        }

        var stringfiedEpicObject = JSON.stringify(epicObject[0]);

        $.ajax({
            type: "POST",
            url: "/Project/CreateNewEpic",
            data: "{'epic': " + stringfiedEpicObject + ", 'projectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    $('.add-epic-input-txt').val("");
                    $('.add-epic-input-ddm').val(0);
                    getProjectEpics();
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getEpicsContent(projID) {
        getModules();
        getProjectEpics();
    }

    function getNFRs() {
        var nfr = "";

        $("#pnfrlTableBody").html("");
        $("#anfrlTableBody").html("");

        $.ajax({
            type: "POST",
            url: "/NFRs/GetNFRsForProject",
            data: "{'projectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    for (var i = 0; i < dataObject.returnedObject.length; i++) {

                        $("#pnfrlTableBody").append("<tr><th scope= 'row' hidden>" + dataObject.returnedObject[i].ID + "</th>" +
                            "<td>" + dataObject.returnedObject[i].NFR + "</td> " +
                            "<td><button class='btn btn-sm btn-danger' onclick='assignAndUnassignNFRToProject(false,\"" + dataObject.returnedObject[i].NFR + "\");'>Unassign</button></td>" +
                            "</tr>");
                    }
                    $(".Table-Pagination")[4].UpdateTablePagination(null,4,5);
                    for (var i = 0; i < dataObject.extraObject.length; i++) {

                        $("#anfrlTableBody").append("<tr><th scope= 'row' hidden>" + dataObject.extraObject[i].ID + "</th>" +
                            "<td>" + dataObject.extraObject[i].NFR + "</td> " +
                            "<td><button class='btn btn-sm btn-primary' onclick='assignAndUnassignNFRToProject(true,\"" + dataObject.extraObject[i].NFR + "\");'>Assign</button></td>" +
                            "</tr>");
                    }
                    $(".Table-Pagination")[5].UpdateTablePagination(null,5,5);
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }
    function getReccomendedNFRs() {

        $("#nfr_rec_domain_table tbody").html("");
        $("#nfr_rec_apptype_table tbody").html("");

        $.ajax({
            type: "POST",
            url: "/Project/GetReccomendedNFRsForProject",
            data: "{'projectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    if (dataObject.returnedObject == null) {
                        $("#nfr_rec_domain_table tbody").append("<tr><th scope= 'row' hidden>0</th>" +
                            "<td>-</td> " +
                            "</tr>");
                    } else {
                        var tmpArrayStrings = dataObject.returnedObject.split(',');
                        for (var i = 0; i < tmpArrayStrings.length; i++) {
                            $("#nfr_rec_domain_table tbody").append("<tr><th scope= 'row' hidden>0</th>" +
                                "<td>" + tmpArrayStrings[i] + "</td> " +
                                "</tr>");
                        }
                    }
                    //$(".Table-Pagination")[4].UpdateTablePagination(null, 4, 5);

                    if (dataObject.extraObject == null) {
                        $("#nfr_rec_apptype_table tbody").append("<tr><th scope= 'row' hidden>0</th>" +
                            "<td>-</td> " +
                            "</tr>");
                    } else {
                        var tmpArrayStrings = dataObject.extraObject.split(',');
                        for (var i = 0; i < tmpArrayStrings.length; i++) {
                            $("#nfr_rec_apptype_table tbody").append("<tr><th scope= 'row' hidden>0</th>" +
                                "<td>" + tmpArrayStrings[i] + "</td> " +
                                "</tr>");
                        }
                    }
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getNFRsContent(projID) {
        getNFRs();
        getReccomendedNFRs();
        getNfrRecFromProjects(4);
    }

    function getSprintsForUS(itemToSelect = null) {
        if (itemToSelect == null) {
            $("#srch-us-Sprint").html("");
            $("#srch-us-Sprint").append("<option selected disabled value='0'>Select Sprint</option>");
        } else {
            //$("#usp-input-Status").html("");
            //$("#usp-input-Status").append("<option selected disabled value='0'>Select Status</option>");
        }

        $.ajax({
            type: "POST",
            url: "/Project/GetProjectSprints",
            data: "{'projectID':" + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == null) {
                        if (itemToSelect == dataObject.returnedObject[i].Name) {
                            $("#srch-us-Sprint").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Name + "</option>");
                        } else {
                            $("#srch-us-Sprint").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Name + "</option>");
                        }
                    } else {
                        if (itemToSelect == dataObject.returnedObject[i].Name) {
                            //$("#usp-input-Status").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                        } else {
                            //$("#usp-input-Status").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                        }
                    }
                }

                $("#srch-us-Sprint").append("<option value='" + null + "'>All</option>");

            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUSModules(container,extraContainer, itemToSelect = null) {

        $(container).html("");
        $(container).append("<option selected disabled value='0'>Select Module</option>");

        for (var v = 0; v < extraContainer.length; v++) {
            $(extraContainer[v]).html("");
            $(extraContainer[v]).append("<option selected disabled value='0'>Select Module</option>");
        }

        $.ajax({
            type: "POST",
            url: "/Modules/GetModulesForEpic",
            data: "{'projectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {

                    if (itemToSelect == dataObject.returnedObject[i].Module) {
                        $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                    } else {
                        $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                    }

                    for (var b = 0; b < extraContainer.length; b++) {
                        $(extraContainer[b]).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                    }

                }
                $("#uus-Module").html($(container).html());
                if (container == "#srch-us-Module" )
                    $(container).append("<option value='" + null + "'>All</option>");

                if (container == "#srbr-Module")
                    $(container).append("<option value='0'>All</option>");

            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUS_CreatedBy_List(itemToSelect = null) {
        if (itemToSelect == null) {
            $("#srch-us-CreatedBy").html("");
            $("#srch-us-CreatedBy").append("<option selected disabled value='0'>Select User</option>");
        } else {
            //$("#uep-input-Module").html("");
            //$("#uep-input-Module").append("<option selected disabled value='0'>Select Module</option>");
        }
        $.ajax({
            type: "POST",
            url: "/Project/GetUsersCreatedUserStories",
            data: "{'projectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == null) {
                        if (itemToSelect == dataObject.returnedObject[i].Email) {
                            $("#srch-us-CreatedBy").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Fullname + "</option>");
                        } else {
                            $("#srch-us-CreatedBy").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Fullname + "</option>");
                        }
                    } else {
                        if (itemToSelect == dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Fullname) {
                            // $("#uep-input-Module").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                        } else {
                            //$("#uep-input-Module").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                        }
                    }
                }

                $("#srch-us-CreatedBy").append("<option value='0'>All</option>");
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getTasks_CreatedBy_List(itemToSelect = null) {
        if (itemToSelect == null) {
            $("#srch-task-CreatedBy").html("");
            $("#srch-task-CreatedBy").append("<option selected disabled value='0'>Select User</option>");
        } else {
            //$("#uep-input-Module").html("");
            //$("#uep-input-Module").append("<option selected disabled value='0'>Select Module</option>");
        }
        $.ajax({
            type: "POST",
            url: "/Project/GetUsersCreatedTasks",
            data: "{'projectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == null) {
                        if (itemToSelect == dataObject.returnedObject[i].Email) {
                            $("#srch-task-CreatedBy").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Fullname + "</option>");
                        } else {
                            $("#srch-task-CreatedBy").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Fullname + "</option>");
                        }
                    } else {
                        if (itemToSelect == dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Fullname) {
                            // $("#uep-input-Module").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                        } else {
                            //$("#uep-input-Module").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                        }
                    }
                }

                $("#srch-task-CreatedBy").append("<option value='0'>All</option>");
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUSProjectUsers(container, itemToSelect = null) {
        if (itemToSelect == null) {
            $(container).html("");
            $(container).append("<option selected value='0'>Select User</option>");
        } else {
            //$("#uep-input-Module").html("");
            //$("#uep-input-Module").append("<option selected disabled value='0'>Select Module</option>");
        }
        $.ajax({
            type: "POST",
            url: "/Project/GetUsersList",
            data: "{'filterVal': 1, 'projectID':" + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == null) {
                        if (itemToSelect == dataObject.returnedObject[i].Email) {
                            $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Fullname + "</option>");
                        } else {
                            $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Fullname + "</option>");
                        }
                    } else {
                        if (itemToSelect == dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Fullname) {
                            // $("#uep-input-Module").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                        } else {
                            //$("#uep-input-Module").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                        }
                    }
                }

                $("#uus-Users").html($(container).html());

                if (container == "#srbr-AssignedTo" || container == "#srbr-CreatedBy")
                    $(container).append("<option value='0'>All</option>");

            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUSReqTypes(container, itemToSelect = null) {
            $(container).html("");
            $(container).append("<option selected disabled value='0'>Select Type</option>");
        $.ajax({
            type: "GET",
            url: "/Project/GetUsReqTypes",
            data: "{}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                        if (itemToSelect == dataObject.returnedObject[i].Type_Value) {
                            $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Type_Value + "</option>");
                        } else {
                            $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Type_Value + "</option>");
                        }
                }
                $("#uus-ReqType").html($(container).html());
                if (container == "#srbs-ReqType" || container == "#srbp-ReqType")
                    $(container).append("<option value='0'>All</option>");

            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getProjUserStories(container, itemToSelect = null) {
        $(container).html("");
        $(container).append("<option selected disabled value='0'>Select Story</option>");
        $.ajax({
            type: "Post",
            url: "/Project/GetProjUserStoriesList",
            data: "{projectID: " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].Title) {
                        $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Title + "</option>");
                    } else {
                        $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Title + "</option>");
                    }
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUSTypes(container, itemToSelect = null) {
        $(container).html("");
        $(container).append("<option selected disabled value='0'>Select Type</option>");
        $.ajax({
            type: "GET",
            url: "/Project/GetUsTypes",
            data: "{}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].Type_Value) {
                        $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Type_Value + "</option>");
                    } else {
                        $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Type_Value + "</option>");
                    }
                }
                $("#uus-USType").html($(container).html());
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUSProjSprints(container, itemToSelect = null) {
        $(container).html("");
        $("#uus-Sprint").html("");
        $(container).append("<option selected disabled value='0'>Select Sprint</option>");
        $("#uus-Sprint").append("<option selected disabled value='0'>Select Sprint</option>");
        $.ajax({
            type: "POST",
            url: "/Project/GetProjectSprints",
            data: "{'projectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    $("#uus-Sprint").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Name + "</option>");

                    if (itemToSelect == dataObject.returnedObject[i].Name) {
                        $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Name + "</option>");
                    } else {
                        $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Name + "</option>");
                    }
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUSPriorities(container, itemToSelect = null) {
        $(container).html("");
        $(container).append("<option selected disabled value='0'>Select Priority</option>");
        $.ajax({
            type: "GET",
            url: "/Project/GetUsPriorities",
            data: "{}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].Priority_Value) {
                        $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Priority_Value + "</option>");
                    } else {
                        $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Priority_Value + "</option>");
                    }
                }
                $("#uus-Priority").html($(container).html());
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUSRelations(container, itemToSelect = null) {
        $(container).html("");
        $(container).append("<option selected disabled value='0'>Select Relation</option>");
        $.ajax({
            type: "GET",
            url: "/Project/GetUsRelations",
            data: "{}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].Relation_Value) {
                        $(container).append("<option class='US-Relations-Option " + dataObject.returnedObject[i].Req_Type + "' selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Relation_Value + "</option>");
                    } else {
                        $(container).append("<option class='US-Relations-Option " + dataObject.returnedObject[i].Req_Type + "' value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Relation_Value + "</option>");
                    }
                }
                $("#uus-Relation").html($(container).html());
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getRelations(container, itemToSelect = null) {
        $(container).html("");
        $(container).append("<option selected disabled value='0'>Select Relation</option>");
        $.ajax({
            type: "GET",
            url: "/Project/GetUsRelations",
            data: "{}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].Relation_Value) {
                        $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Relation_Value + "</option>");
                    } else {
                        $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Relation_Value + "</option>");
                    }
                }
                if (container == "#srbr-RelatedTo")
                    $(container).append("<option value='0'>All</option>");

            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUSPositivity(container, itemToSelect = null) {
        $(container).html("");
        $(container).append("<option selected disabled value='0'>Select Positivity</option>");
        $.ajax({
            type: "GET",
            url: "/Project/GetUsPositivity",
            data: "{}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].PosNeg_Value) {
                        $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].PosNeg_Value + "</option>");
                    } else {
                        $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].PosNeg_Value + "</option>");
                    }
                }
                $('#uus-Positivity').html($(container).html());
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUSProjNFRs(container, itemToSelect = null) {
        $(container).html("");
        $(container).append("<option selected disabled value='0'>Select NFR</option>");
        $.ajax({
            type: "POST",
            url: "/NFRs/GetNFRsForProject",
            data: "{'projectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].NFR) {
                        $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].NFR + "</option>");
                    } else {
                        $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].NFR + "</option>");
                    }
                }
                $("#uus-nfrType").html($(container).html());
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getUSEpics(container, itemToSelect = null) {
        $(container).html("");
        $(container).append("<option selected disabled value='0'>Select Epic</option>");
        $.ajax({
            type: "POST",
            url: "/Project/GetProjectEpics",
            data: "{'projectID':" + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].Name) {
                        $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Name + "</option>");
                    } else {
                        $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Name + "</option>");
                    }
                }
                $("#uus-Epic").html($(container).html());

                if (container == "#srbr-Epic")
                    $(container).append("<option value='0'>All</option>");
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function appendTagsToUSTags(element) {
        if (element.val() != 0)
            $('#add-us-UserStoriesTags').tagsinput('add', {id: element.val(), value: $('#add-us-UserStories option:selected').text() });
    }

    function appendTagsToAssigedUsersTags(element) {
        if (element.val() != 0)
            $('#add-us-AssignToTags').tagsinput('add', {id: element.val(), value: $('#add-us-AssignTo option:selected').text() });
    }

    function appendTagsToAssigedUUSUsersTags(element) {
        if (element.val() != 0)
            $('#uus-AssignedUsers').tagsinput('add', { id: element.val(), value: $('#uus-Users option:selected').text() });
    }

    function appendTagsToRelatedUUSUSTags(element) {
        if (element.val() != 0)
            $('#uus-RelatedUserStories').tagsinput('add', { id: element.val(), value: $('#uus-UserStories option:selected').text() });
    }

    function appendTagsToAssigedATKUsersTags(element) {
        if (element.val() != 0)
            $('#add-tk-AssignedUsers').tagsinput('add', { id: element.val(), value: $('#add-tk-Users option:selected').text() });
    }

    function appendTagsToAssigedETKUsersTags(element) {
        if (element.val() != 0)
            $('#edit-tk-AssignedUsers').tagsinput('add', { id: element.val(), value: $('#edit-tk-Users option:selected').text() });
    }

    function submitNewUserStory() {

        var ReqTypeSelectedVal = $("#add-us-ReqType option:selected").text();
        var UsTypeSelectedVal = $("#add-us-UsType option:selected").text();
        var RelationsSelectedVal = $("#add-us-Relations option:selected").text();
        var AssignTo = new Array();
        var UserStories = new Array();

        var hasFiles = true;
        if (document.getElementById("add-us-Attachments").files.length == 0) {
            hasFiles = false;
        }

        {
            var mandatoryInserted = true;

            $('.us-main-mandatory').each(function (i, obj) {
                if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                    mandatoryInserted = false;
                }
            });

            if (!mandatoryInserted) {
                alert("Please Insert Mandatory Fields!");
                return;
            }

            if (ReqTypeSelectedVal == "Functional") {
                mandatoryInserted = true;

                $('.us-fr-mandatory').each(function (i, obj) {
                    if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                        mandatoryInserted = false;
                    }
                });

                if (!mandatoryInserted) {
                    alert("Please Insert Mandatory Fields!");
                    return;
                }

                if (UsTypeSelectedVal == "Custom") {
                    mandatoryInserted = true;

                    $('.us-fr-custom-mandatory').each(function (i, obj) {
                        if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                            mandatoryInserted = false;
                        }
                    });

                    if (!mandatoryInserted) {
                        alert("Please Insert Mandatory Fields!");
                        return;
                    }
                } else {
                    mandatoryInserted = true;

                    $('.us-fr-standard-mandatory').each(function (i, obj) {
                        if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                            mandatoryInserted = false;
                        }
                    });

                    if (!mandatoryInserted) {
                        alert("Please Insert Mandatory Fields!");
                        return;
                    }
                }
            } else {
                mandatoryInserted = true;

                $('.us-nfr-mandatory').each(function (i, obj) {
                    if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                        mandatoryInserted = false;
                    }
                });

                if (!mandatoryInserted) {
                    alert("Please Insert Mandatory Fields!");
                    return;
                }

                $('.us-relations-mandatory').each(function (i, obj) {
                    if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                        mandatoryInserted = false;
                    }
                });

                if (!mandatoryInserted) {
                    alert("Please Insert Mandatory Fields!");
                    return;
                }
            }
        }

        var ReqType = $("#add-us-ReqType").val();
        var Priority = $("#add-us-Priority").val();
        var Status = $("#add-us-Status").val();
        var Sprint = $("#add-us-Sprint").val();
        //var name = $("#add-us-Attachmentssssssssssssssssssssssssssssssssss").val();
        var Description = $("#add-us-Description").val();
        var CustomUserStory = $("#add-us-CustomUserStory").val();
        var AcceptanceCriteria = $("#add-us-AcceptanceCriteria").val();
        var Title = $("#add-us-Title").val();
        var UsType = $("#add-us-UsType").val();
        var PosOrNeg = $("#add-us-PosOrNeg").val();
        var Relations = $("#add-us-Relations").val();
        var Module = $("#add-us-Module").val();
        var Epic = $("#add-us-Epic").val();
        var AsA = $("#add-us-AsA").val();
        var IWish = $("#add-us-IWish").val();
        var SoThat = $("#add-us-SoThat").val();
        var NFR = $("#add-us-NFR").val();
        var NFR_For = $("#add-us-NfrFor").val();
        var NFR_IWant = $("#add-us-NfrIWant").val();
        var NFR_ToBe = $("#add-us-NfrToBe").val();

        $('.AT-Tags-Item').each(function (i, obj) {
            AssignTo[i] = $(this).attr("tagid");
        });

        $('.US-Tags-Item').each(function (i, obj) {
            UserStories[i] = $(this).attr("tagid");
        });

        var newUserStory = new Array();
        newUserStory[0] = {
            "ProjectID": projectID,
            "SprintID": Sprint,
            "EpicID": Epic,
            "ModuleID": Module,
            "StatusID": Status,
            "UsType": UsType,
            "RequirementType": ReqType,
            "RelatedTo": Relations,
            "UsPriority": Priority,
            "AttachmentsUrl": 0,
            "FRC_CustomUserStory": CustomUserStory,
            "FRS_Title": Title,
            "FRS_AsA": AsA,
            "FRS_SoThat": SoThat,
            "FRS_IWish": IWish,
            "FRS_AcceptanceCriteria": AcceptanceCriteria,
            "NFR_PosOrNeg": PosOrNeg,
            "NFR_NFRID": NFR,
            "NFR_Description": Description,
            "NFR_For": NFR_For,
            "NFR_IWant": NFR_IWant,
            "NFR_ToBe": NFR_ToBe
        }

        var newUserStoryStringied = JSON.stringify(newUserStory[0]);
        var UserStoriesStringied = JSON.stringify(UserStories);
        var AssignToStringied = JSON.stringify(AssignTo);

        $.ajax({
            type: "POST",
            url: "/Project/CreateNewUserStory",
            data: "{'userStory': " + newUserStoryStringied + ", 'relatedStories': " + UserStoriesStringied + ", 'assignedUsers': " + AssignToStringied + ", hasFiles: " + hasFiles + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    uploadFiles("#add-us-Attachments", dataObject.returnedObject);
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    $('.add-us-input-txt').val("");
                    $('.add-us-input-ddm').val(0);
                    $('.add-us-input-att').val(null);
                    $('#add-us-AssignToTags').tagsinput('removeAll');
                    $('#add-us-UserStoriesTags').tagsinput('removeAll');
                    SearchUserStories();
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getNfrRecFromProjects(value) {
        $.ajax({
            type: "POST",
            url: "/Project/GetTopRecomendedNFR",
            data: "{'Top': " + value + ", 'ActiveProjectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                $("#RecommendedNFRsPrevProjs").html("");
                if (dataObject.successFlag) {
                    for (var i = 0; i < dataObject.returnedObject.length; i++) {
                        $("#RecommendedNFRsPrevProjs").append(
                            '<tr>' +
                            '<td>' + dataObject.returnedObject[i].NFR+'</td>' +
                            '<td>' + dataObject.returnedObject[i].Usage +'%</td>' +
                            '</tr >');
                    }
                    //console.log(dataObject);
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function SearchUserStories() {

        var usID = $("#srch-us-ID").val();
        var usCreatedBy = $("#srch-us-CreatedBy").val();
        var usModule = $("#srch-us-Module").val();
        var usSprint = $("#srch-us-Sprint").val();
        var usStatus = $("#srch-us-Status").val();

        var tmpUserStoryObj = {
            "ID": usID,
            "CreatedBy": usCreatedBy,
            "ModuleID": usModule,
            "SprintID": usSprint,
            "StatusID": usStatus
        }

        var stringfiedObj = JSON.stringify(tmpUserStoryObj);
        $("#uslTableBody").html("");

        $.ajax({
            type: "POST",
            url: "/Project/GetProjectUserStories",
            data: "{'story': " + stringfiedObj + ", 'projectID': " + projectID + " }",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {

                userStoriesObjectReference = new Array();
                userStoriesAssignedItemsReference = dataObject.extraObject;

                $("#add-us-UserStories").html("");
                $("#add-us-UserStories").append("<option selected value='0'>Select Story</option>");
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    userStoriesObjectReference[i] = dataObject.returnedObject[i];
                    $("#uslTableBody").append("<tr>" +
                        "<th scope = 'row'>" + dataObject.returnedObject[i].ID + "</th>" +
                        "<td>" + dataObject.returnedObject[i].FRS_Title + "</td>" +
                        "<td>" + dataObject.returnedObject[i].Status + "</td>" +
                        "<td>" + dataObject.returnedObject[i].RequirementType + "</td>" +
                        "<td>" + dataObject.returnedObject[i].CreatedBy + "</td>" +
                        "<td>" + (dataObject.returnedObject[i].AttachmentsUrl == null ? "" : "<a title='Download Attachments' class='btn btn-sm btn-primary' href='" + dataObject.returnedObject[i].AttachmentsUrl + "/Files-Archive.zip'><i class='fa fa-download'></i></a> ") + "<button class='btn btn-sm btn-secondary' onclick='viewUusPanel(" + i + ")'>Update</button> <button onclick='deleteUserStory(" + i + ");' class='btn btn-sm btn-danger'>Delete</button></td>" +
                        "</tr >");


                    $("#add-us-UserStories").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].FRS_Title + "</option>");
                }
                $("#uus-UserStories").html($("#add-us-UserStories").html());
                $(".Table-Pagination")[9].UpdateTablePagination(null, 9, 5);
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });

    }

    function viewUusPanel(usRefID) {
        $("#uus-ID").val(userStoriesObjectReference[usRefID].ID);
        markDropdownSelection("#uus-ReqType", userStoriesObjectReference[usRefID].RequirementType);
        markDropdownSelection("#uus-Priority", userStoriesObjectReference[usRefID].Priority);
        markDropdownSelection("#uus-Status", userStoriesObjectReference[usRefID].Status);
        $("#uus-Title").val(userStoriesObjectReference[usRefID].FRS_Title);
        markDropdownSelection("#uus-Sprint", userStoriesObjectReference[usRefID].Sprint);
        $("#uus-CustomUserStory").val(userStoriesObjectReference[usRefID].FRC_CustomUserStory);
        $("#uus-Description").val(userStoriesObjectReference[usRefID].NFR_Description);
        $("#uus-AcceptanceCriteria").val(userStoriesObjectReference[usRefID].FRS_AcceptanceCriteria);
        markDropdownSelection("#uus-USType", userStoriesObjectReference[usRefID].USType);
        markDropdownSelection("#uus-Relation", userStoriesObjectReference[usRefID].RelatedTo);
        if (userStoriesObjectReference[usRefID].RelatedTo != null)
            $("#uus-Module").val(userStoriesObjectReference[usRefID].Module);
        markDropdownSelection("#uus-Epic", userStoriesObjectReference[usRefID].Epic);
        markDropdownSelection("#uus-Positivity", userStoriesObjectReference[usRefID].Positivity);
        $("#uus-AsA").val(userStoriesObjectReference[usRefID].FRS_AsA);
        $("#uus-IWish").val(userStoriesObjectReference[usRefID].FRS_IWish);
        $("#uus-SoThat").val(userStoriesObjectReference[usRefID].FRS_SoThat);
        $("#uus-NfrFor").val(userStoriesObjectReference[usRefID].NFR_For);
        $("#uus-NfrIWant").val(userStoriesObjectReference[usRefID].NFR_IWant);
        $("#uus-NfrToBe").val(userStoriesObjectReference[usRefID].NFR_ToBe);
        markDropdownSelection("#uus-nfrType", userStoriesObjectReference[usRefID].NFR);
        $('#update-us-Attachments').val(null);

        var assigUsersList = userStoriesAssignedItemsReference.AssignedUsers[usRefID].AssignedUsersList;
        $('#uus-AssignedUsers').tagsinput('removeAll');
        for (var i = 0; i < assigUsersList.length; i++) {
            $('#uus-AssignedUsers').tagsinput('add', { id: "" + assigUsersList[i].ID, value: (assigUsersList[i].ID + "-" + assigUsersList[i].Name) });
        }
        var relatedStoriesList = userStoriesAssignedItemsReference.AssignedStories[usRefID].AssignedStoriesList;
        $('#uus-RelatedUserStories').tagsinput('removeAll');
        for (var b = 0; b < relatedStoriesList.length; b++) {
            $('#uus-RelatedUserStories').tagsinput('add', { id: "" + relatedStoriesList[b].ID, value: (relatedStoriesList[b].ID + "-" + relatedStoriesList[b].Title) });
        }

        $('.conditional-item').hide();
        $('#uus-Relation .US-Relations-Option').hide();
        $(".uus-relation-item").hide();

        if (userStoriesObjectReference[usRefID].RequirementType == "Functional") {
            $('.uus-functional-req-item').show();
            $('.uus-func-req-type-item').hide();
            $('.uus-' + userStoriesObjectReference[usRefID].USType + '-item').show();
            $('#uus-Relation .US-Relations-Option.Functional').show();
        } else {
            $('.uus-nfr-req-item').show();
            $('#uus-Relation .US-Relations-Option').show();
        }

        if (userStoriesObjectReference[usRefID].RelatedTo != null)
            $(".uus-" + userStoriesObjectReference[usRefID].RelatedTo.replace(" ", "") + "-rel-item").show();

        updatedUserStory[0] = {
            "ID": userStoriesObjectReference[usRefID].ID,
            "ProjectID": projectID,
            "SprintID": $("#uus-Sprint").val(),
            "EpicID": $("#uus-Epic").val(),
            "ModuleID": $("#uus-Module").val(),
            "StatusID": $("#uus-Status").val(),
            "UsType": $("#uus-USType").val(),
            "RequirementType": $("#uus-ReqType").val(),
            "RelatedTo": $("#uus-Relation").val(),
            "UsPriority": $("#uus-Priority").val(),
            "FRC_CustomUserStory": userStoriesObjectReference[usRefID].FRC_CustomUserStory,
            "FRS_Title": userStoriesObjectReference[usRefID].FRS_Title,
            "FRS_AsA": userStoriesObjectReference[usRefID].AsA,
            "FRS_SoThat": userStoriesObjectReference[usRefID].SoThat,
            "FRS_IWish": userStoriesObjectReference[usRefID].IWish,
            "FRS_AcceptanceCriteria": userStoriesObjectReference[usRefID].AcceptanceCriteria,
            "NFR_PosOrNeg": $("#uus-Positivity").val(),
            "NFR_NFRID": $("#uus-nfrType").val(),
            "NFR_Description": userStoriesObjectReference[usRefID].Description,
            "NFR_For": userStoriesObjectReference[usRefID].NFR_For,
            "NFR_IWant": userStoriesObjectReference[usRefID].NFR_IWant,
            "NFR_ToBe": userStoriesObjectReference[usRefID].NFR_ToBe
        }

        $("#uusPanelContainer").fadeIn();
    }

    function updateUserStory() {
        var mandatoryInserted = true;
        $('.uus-mandatory-field').each(function (i, obj) {
            if ($(this).is(":visible") && ($(this).val() == "" || $(this).val() == null || $(this).val() == 0)) {
                mandatoryInserted = false;
            }
        });

        if (!mandatoryInserted) {
            alert("Please Insert Mandatory Fields!");
            return;
        }

        var assignedUsers = new Array();
        $(".UUSUser-Tags-Item").each(function (i, obj) {
            assignedUsers[i] = {
                "UserStory": updatedUserStory[0].ID,
                "AssignedUser": $(this).attr("tagid")
            }
        });
        var relatedStories = new Array();
        $(".UUSRelatedStories-Tags-Item").each(function (i, obj) {
            relatedStories[i] = {
                "UserStory": updatedUserStory[0].ID,
                "RelatedToStory": $(this).attr("tagid")
            }
        });

        var stringfiedUserStoryObject = JSON.stringify(updatedUserStory[0]);
        var stringfiedAssignedUsers = JSON.stringify(assignedUsers);
        var stringfiedRelatedStories = JSON.stringify(relatedStories);

        var hasFiles = true;
        if (document.getElementById("update-us-Attachments").files.length == 0) {
            hasFiles = false;
        }

        $.ajax({
            type: "POST",
            url: "/Project/UpdateUserStory",
            data: "{'updatedUserStory':" + stringfiedUserStoryObject + ",'assignedUsers':" + stringfiedAssignedUsers + ", 'relatedStories':" + stringfiedRelatedStories + ", hasFiles: " + hasFiles + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    uploadFiles("#update-us-Attachments", "/Uploads/User-Stories-Files/" + updatedUserStory[0].ID + "/");
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    SearchUserStories();
                    $('#update-us-Attachments').val(null);
                    $('#uusPanelContainer').hide();
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function deleteUserStory(usRefID) {
        var storyID = userStoriesObjectReference[usRefID].ID;
        var storyText = userStoriesObjectReference[usRefID].FRS_Title;

        let deletedStory = confirm("Confirm Deleting Story:\n\"" + storyText + "\" With The ID \"" + storyID + "\"");
        if (!deletedStory) {
            return;
        } else {
            $.ajax({
                type: "POST",
                url: "/Project/DeleteUserStory",
                data: "{'storyID':" + storyID + "}",
                contentType: "application/json; charset=utf-8",
                dataType: "JSON",
                success: function (dataObject) {
                    if (dataObject.successFlag) {
                        alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                        SearchUserStories();
                    } else {
                        alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                    }
                },
                error: function (xhr, status, error) {
                    alert("Error: " + xhr.responseText);
                }
            });
        }
    }

    var toType = function (obj) {
        return ({}).toString.call(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase()
    }

    function getUserStoriesContent(projID) {
        var moduleDdmList = ["#add-us-Module"];
        getUSModules("#srch-us-Module", moduleDdmList);
        getUS_CreatedBy_List();
        getSprintsForUS();
        getStatus("#srch-us-Status");
        SearchUserStories();
        getUSProjectUsers("#add-us-AssignTo");
        getUSReqTypes("#add-us-ReqType", "Functional");
        getUSPriorities("#add-us-Priority");
        getStatus("#add-us-Status");
        getUSProjSprints("#add-us-Sprint");
        getUSTypes("#add-us-UsType", "Custom");
        getUSRelations("#add-us-Relations");
        getUSPositivity("#add-us-PosOrNeg");
        getUSProjNFRs("#add-us-NFR");
        getUSEpics("#add-us-Epic");

        $("#us-header-projectID").text($("#display-g-i-ProjectID").text());
        $("#us-header-project").text($("#display-g-i-ProjectName").text());
        $("#us-header-domain").text($("#display-g-i-ProjectDomain").text());
    }

    function getSprintsForPBL(container, itemToSelect = null) {
        $(container).html("");
        $(container).append("<option selected disabled value='0'>Select Sprint</option>");
        $.ajax({
            type: "POST",
            url: "/Project/GetProjectSprints",
            data: "{'projectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].Name) {
                        $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Name + "</option>");
                    } else {
                        $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].ID + "-" + dataObject.returnedObject[i].Name + "</option>");
                    }
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function assignPblUsToSprint() {

        var selectedSprint = $("#pbl-Sprint").val();
        var stringfiedPblUsList = JSON.stringify(selectedPblUserstoriesArray);
        $.ajax({
            type: "POST",
            url: "/Project/AssignUserStoriesToSprint",
            data: "{'sprintID': " + selectedSprint + ", '': " + stringfiedPblUsList + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    getPblUnassignedUS();
                    $('#pbl-Sprint').val(0);
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function handlePblUsSelection(usID, addFlag) {
        $("#pbluslTbaleBody input[type='checkbox']").prop("disabled", true);
        if (addFlag) {
            selectedPblUserstoriesArray.push(usID);
        } else {
            for (var i = 0; i < selectedPblUserstoriesArray.length; i++) {
                if (selectedPblUserstoriesArray[i] == usID)
                    selectedPblUserstoriesArray.splice(selectedPblUserstoriesArray.indexOf(selectedPblUserstoriesArray[i]), 1);
            };
        }
        $("#pbluslTbaleBody input[type='checkbox']").prop("disabled", false);
    }

    function getPblUnassignedUS() {
        selectedPblUserstoriesArray = new Array();
        $("#pbluslTbaleBody").html("");
        $.ajax({
            type: "POST",
            url: "/Project/GetProjectUnAssignedUS",
            data: "{'projectID': " + projectID + " }",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    $("#pbluslTbaleBody").append("<tr>" +
                        "<th scope = 'row' hidden>" + dataObject.returnedObject[i].ID + "</th>" +
                        "<td><input onchange='handlePblUsSelection(" + dataObject.returnedObject[i].ID + ", $(this).is(\":checked\"));' type='checkbox'></td>" +
                        "<td>" + dataObject.returnedObject[i].FRS_Title + "</td>" +
                        "<td>" + dataObject.returnedObject[i].Status + "</td>" +
                        "<td>" + dataObject.returnedObject[i].CreatedBy + "</td>" +
                        "</tr >");
                }

                $(".Table-Pagination")[11].UpdateTablePagination(null, 11, 20);
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });}

    function getProductBacklogContent(projID) {
        getPblUnassignedUS();
        getSprintsForPBL("#pbl-Sprint");
    }

    function SearchTasks() {

        var tkID = $("#srch-task-ID").val();
        var tkUSID = $("#srch-task-UserStoryID").val();
        var tkCreatedBy = $("#srch-task-CreatedBy").val();
        var tkStatus = $("#srch-task-Status").val();

        var tmpTaskObj = {
            "ID": tkID,
            "ProjectID": projectID,
            "CreatedBy": tkCreatedBy,
            "Status": (tkStatus == null ? 0 : tkStatus),
            "AssignedUserStory": tkUSID
        }

        var stringfiedObj = JSON.stringify(tmpTaskObj);
        $("#tklTableBody").html("");

        $.ajax({
            type: "POST",
            url: "/Project/GetProjectTasks",
            data: "{'task': " + stringfiedObj + ", 'projectID': " + projectID + " }",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {

                tasksObjectReference = new Array();
                tasksAssignedItemsReference = dataObject.extraObject;

                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    tasksObjectReference[i] = dataObject.returnedObject[i];
                    $("#tklTableBody").append("<tr>" +
                        "<th scope = 'row'>" + dataObject.returnedObject[i].ID + "</th>" +
                        "<td>" + dataObject.returnedObject[i].Title + "</td>" +
                        "<td>" + dataObject.returnedObject[i].Status + "</td>" +
                        "<td>" + dataObject.returnedObject[i].CreatedBy + "</td>" +
                        "<td>" + (dataObject.returnedObject[i].AttachmentUrl == null ? "" : "<a title='Download Attachments' class='btn btn-sm btn-primary' href='" + dataObject.returnedObject[i].AttachmentUrl + "/Files-Archive.zip'><i class='fa fa-download'></i></a> ") + "<button class='btn btn-sm btn-secondary' onclick='viewUtkPanel(" + i + ");'>Update</button> <button onclick='deleteTask(" + dataObject.returnedObject[i].ID + ", \"" + dataObject.returnedObject[i].Title + "\");' class='btn btn-sm btn-danger'>Delete</button></td>" +
                        "</tr >");
                }
                $(".Table-Pagination")[10].UpdateTablePagination(null, 10, 5);
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });

    }

    function submitNewTask() {

        var AssignTo = new Array();

        var mandatoryInserted = true;

        $('.add-task-mandatory-field').each(function (i, obj) {
            if ($(this).val() == "" || $(this).val() == null || $(this).val() == 0) {
                mandatoryInserted = false;
            }
        });

        if (!mandatoryInserted) {
            alert("Please Insert Mandatory Fields!");
            return;
        }

        $('.AddTK-Tags-Item').each(function (i, obj) {
            AssignTo[i] = $(this).attr("tagid");
        });


        var newTask = {
            "ID":null,
            "ProjectID": projectID,
            "Title": $("#add-tk-Title").val(),
            "Description": $("#add-tk-Description").val(),
            "Status": $("#add-tk-Status").val(),
            "Priority": $("#add-tk-Priority").val(),
            "AssignedUserStory": $("#add-tk-UserStory").val(),
            "RequirementType": $("#add-tk-ReqType").val(),
            "AttachmentUrl": ""
        }

        var newTaskStringied = JSON.stringify(newTask);
        var AssignToStringied = JSON.stringify(AssignTo);

        var hasFiles = true;
        if (document.getElementById("add-tk-Attachments").files.length == 0) {
            hasFiles = false;
        }

        $.ajax({
            type: "POST",
            url: "/Project/CreateNewTask",
            data: "{'task': " + newTaskStringied + ", 'assignedUsers': " + AssignToStringied + ", hasFiles: " + hasFiles + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    uploadFiles("#add-tk-Attachments", dataObject.returnedObject);
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    $('.add-task-input-txt').val("");
                    $('.add-task-input-ddm').val(0);
                    $('#add-tk-Attachments').val(null);
                    $('#add-tk-AssignedUsers').tagsinput('removeAll');
                    $(".Add-New-Task-Container .custom-file-label").text("Choose File");
                    SearchTasks();
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function deleteTask(taskID, taskTitle) {

        let deletedTask = confirm("Confirm Deleting Task:\n\"" + taskTitle + "\" With The ID \"" + taskID + "\"");
        if (!deletedTask) {
            return;
        } else {
            $.ajax({
                type: "POST",
                url: "/Project/DeleteTask",
                data: "{'taskID':" + taskID + "}",
                contentType: "application/json; charset=utf-8",
                dataType: "JSON",
                success: function (dataObject) {
                    if (dataObject.successFlag) {
                        alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                        SearchUserStories();
                    } else {
                        alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                    }
                    SearchTasks();
                },
                error: function (xhr, status, error) {
                    alert("Error: " + xhr.responseText);
                }
            });
        }
    }

    function viewUtkPanel(tkRefID) {

        $("#edit-tk-ReqType").html($("#add-tk-ReqType").html());
        $("#edit-tk-Priority").html($("#add-tk-Priority").html());
        $("#edit-tk-Status").html($("#add-tk-Status").html());
        $("#edit-tk-UserStory").html($("#add-tk-UserStory").html());
        $("#edit-tk-Users").html($("#add-tk-Users").html());

        $("#edit-tk-ID").val(tasksObjectReference[tkRefID].ID);
        markDropdownSelection("#edit-tk-ReqType", tasksObjectReference[tkRefID].ReqType);
        markDropdownSelection("#edit-tk-Priority", tasksObjectReference[tkRefID].Priority);
        markDropdownSelection("#edit-tk-Status", tasksObjectReference[tkRefID].Status);
        markDropdownSelection("#edit-tk-UserStory", tasksObjectReference[tkRefID].UserstoryID+"-"+tasksObjectReference[tkRefID].Userstory);
        $("#edit-tk-Title").val(tasksObjectReference[tkRefID].Title);
        $("#edit-tk-Description").val(tasksObjectReference[tkRefID].Description);
        $('#edit-tk-Attachments').val(null);

        var assigUsersList = tasksAssignedItemsReference.AssignedUsers[tkRefID].AssignedUsersList;
        $('#edit-tk-AssignedUsers').tagsinput('removeAll');
        for (var i = 0; i < assigUsersList.length; i++) {
            $('#edit-tk-AssignedUsers').tagsinput('add', { id: "" + assigUsersList[i].ID, value: (assigUsersList[i].ID + "-" + assigUsersList[i].Name) });
        }

        updatedTask = {
            "ID": tasksObjectReference[tkRefID].ID,
            "ProjectID": tasksObjectReference[tkRefID].ProjectID,
            "Title": tasksObjectReference[tkRefID].Title,
            "Description": tasksObjectReference[tkRefID].Description,
            "Status": $("#edit-tk-Status").val(),
            "Priority": $("#edit-tk-Priority").val(),
            "AssignedUserStory": $("#edit-tk-UserStory").val(),
            "RequirementType": $("#edit-tk-ReqType").val(),
            "AttachmentUrl": ""
        }

        $("#utkPanelContainer").fadeIn();
    }

    function updateTask() {
        var mandatoryInserted = true;
        $('.edit-task-mandatory-field').each(function (i, obj) {
            if ($(this).is(":visible") && ($(this).val() == "" || $(this).val() == null || $(this).val() == 0)) {
                mandatoryInserted = false;
            }
        });

        if (!mandatoryInserted) {
            alert("Please Insert Mandatory Fields!");
            return;
        }

        var assignedUsers = new Array();
        $(".EditTK-Tags-Item").each(function (i, obj) {
            assignedUsers[i] = {
                "TaskID": updatedTask.ID,
                "AssignedUser": $(this).attr("tagid")
            }
        });

        var stringfiedTaskObject = JSON.stringify(updatedTask);
        var stringfiedAssignedUsers = JSON.stringify(assignedUsers);

        var hasFiles = true;
        if (document.getElementById("edit-tk-Attachments").files.length == 0) {
            hasFiles = false;
        }

        $.ajax({
            type: "POST",
            url: "/Project/UpdateTask",
            data: "{'updatedTask':" + stringfiedTaskObject + ",'assignedUsers':" + stringfiedAssignedUsers + ", hasFiles: " + hasFiles + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    uploadFiles("#edit-tk-Attachments", "/Uploads/Tasks-Files/" + updatedTask.ID + "/");
                    alert("Status: " + dataObject.status + "\nMessage: " + dataObject.successMsg + (dataObject.errorMsg == null ? "" : "\n" + dataObject.errorMsg));
                    SearchTasks();
                    $('.edit-task-input-txt').val("");
                    $('.edit-task-input-ddm').val(0);
                    $('#edit-tk-AssignedUsers').tagsinput('removeAll');
                    $('#edit-us-Attachments').val(null);
                    $('#utkPanelContainer').hide();
                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getTasksContent(projID) {
        SearchTasks();
        getStatus("#srch-task-Status");
        getTasks_CreatedBy_List();
        getUSReqTypes("#add-tk-ReqType");
        getStatus("#add-tk-Status");
        getUSPriorities("#add-tk-Priority");
        getUSProjectUsers("#add-tk-Users");
        getProjUserStories("#add-tk-UserStory");
    }

    function handleSRSelection(selectedVal) {
        $('.Statistical-Report-Chart-Container').hide();
        $('#' + selectedVal.replace('Selected', '')).fadeIn();

        sbUserstoryObj = {
            "ProjectID": projectID,
            "RequirementType": 0,
            "RelatedTo": 0,
            "ModuleID": 0,
            "EpicID": 0,
            "CreatedBy": 0
        }

        if (selectedVal.includes("statRepByReq")) {
            $('#statRepByReqContainer select').val(0);
            drawSRBRChart();
        }
        if (selectedVal.includes("statRepByStatus")) {
            $('#statRepByStatusContainer select').val(0);
            drawSRBSChart();
        }
        if (selectedVal.includes("statRepByPriority")) {
            $('#statRepByPriorityContainer select').val(0);
            drawSRBPChart();
        }
    }

    function drawSRBRChart() {

        var assigToID = ($("#srbr-AssignedTo").val() == 0 ? null : $("#srbr-AssignedTo").val());
        var sbUserstoryObjStringfied = JSON.stringify(sbUserstoryObj);

        $.ajax({
            type: "POST",
            url: "/Reports/Generate_SRBR_Report",
            data: "{'userstory':" + sbUserstoryObjStringfied + ", 'assignedTo': " + assigToID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    datachartSRBR = google.visualization.arrayToDataTable([
                        ['Requirement Type', 'Total', 'Closed', 'Unclosed'],
                        ['Funtional Requirement', dataObject.returnedObject.Total, dataObject.returnedObject.Closed, dataObject.returnedObject.Unclosed],
                        ['Non-Functional Requirement', dataObject.extraObject.Total, dataObject.extraObject.Closed, dataObject.extraObject.Unclosed]
                    ]);

                    optionschartSRBR = {
                        backgroundColor: {
                            fill: '#fff',
                            fillOpacity: 0
                        },
                        chart: {
                            title: 'User Story Bar Chart',
                            subtitle: 'By Requirement Type',
                            animation: {
                                startup: true,
                                duration: 1000,
                                easing: 'out'
                            }
                        },
                        bar: { groupWidth: "30%" },
                        colors: ['#5094D7', '#83C471', '#DC6B4D'],
                        vAxis: { format: 'decimal' },
                    };

                    chartSRBR = new google.charts.Bar(document.getElementById('statRepByReq'));

                    chartSRBR.draw(datachartSRBR, google.charts.Bar.convertOptions(optionschartSRBR));

                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
                SearchTasks();
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });

    }

    function initializeSRBR() {
        google.charts.load('visualization','1.0', { 'packages': ['bar'] });
        google.charts.setOnLoadCallback(drawSRBRChart);

        $('#statRepByReqContainer select').val(0);
    }

    function drawSRBSChart() {

        var sbUserstoryObjStringfied = JSON.stringify(sbUserstoryObj);

        $.ajax({
            type: "POST",
            url: "/Reports/Generate_SRBS_Report",
            data: "{'userstory':" + sbUserstoryObjStringfied + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {
                    var colorsArray = new Array();
                    datachartSRBS = new google.visualization.DataTable();
                    datachartSRBS.addColumn('string', 'Status');
                    datachartSRBS.addColumn('number', 'Count');
                    for (var i = 0; i < dataObject.returnedObject.length; i++) {
                        datachartSRBS.addRows([
                            [dataObject.returnedObject[i].Status, dataObject.returnedObject[i].Count]
                        ]);
                        colorsArray.push(dataObject.returnedObject[i].Color);
                    }

                    optionschartSRBS = {
                        backgroundColor: {
                            fill: '#fff',
                            fillOpacity: 0
                        },
                        title: 'User Story Chart By Status',
                        animation: {
                            startup: true,
                            duration: 1000,
                            easing: 'out'
                        },
                        colors: colorsArray
                    };

                    chartSRBS = new google.visualization.PieChart(document.getElementById('statRepByStatus'));
                    chartSRBS.draw(datachartSRBS, optionschartSRBS);

                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
                SearchTasks();
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function initializeSRBS() {
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawSRBSChart);

        $('#statRepByStatusContainer select').val(0);
    }

    function drawSRBPChart() {

        var sbUserstoryObjStringfied = JSON.stringify(sbUserstoryObj);

        $.ajax({
            type: "POST",
            url: "/Reports/Generate_SRBP_Report",
            data: "{'userstory':" + sbUserstoryObjStringfied + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                if (dataObject.successFlag) {

                    datachartSRBP = new google.visualization.DataTable();
                    datachartSRBP.addColumn('string', 'Priority');
                    datachartSRBP.addColumn('number', 'Count');
                    for (var i = 0; i < dataObject.returnedObject.length; i++) {
                        datachartSRBP.addRows([
                            [dataObject.returnedObject[i].Priority, dataObject.returnedObject[i].Count]
                        ]);
                    }

                    optionschartSRBP = {
                        backgroundColor: {
                            fill: '#fff',
                            fillOpacity: 0
                        },
                        title: 'User Story Chart By Priority',
                        animation: {
                            startup: true,
                            duration: 1000,
                            easing: 'out'
                        }
                    };

                    chartSRBP = new google.visualization.PieChart(document.getElementById('statRepByPriority'));
                    chartSRBP.draw(datachartSRBP, optionschartSRBP);

                } else {
                    alert("Status: " + dataObject.status + "\nError: " + dataObject.errorMsg);
                }
                SearchTasks();
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function initializeSRBP() {
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawSRBPChart);

        $('#statRepByPriorityContainer select').val(0);
    }

    function getStatisticalReportsContent(projID) {
        getRelations("#srbr-RelatedTo");
        getUSModules("#srbr-Module",new Array());
        getUSEpics("#srbr-Epic");
        getUSProjectUsers("#srbr-AssignedTo");
        getUSProjectUsers("#srbr-CreatedBy");

        //getStatus("#srbs-Status");=
        getUSReqTypes("#srbs-ReqType");

        //getUSPriorities("#srbp-Priority");
        getUSReqTypes("#srbp-ReqType");

        $("#sr-header-projectID").text($("#display-g-i-ProjectID").text());
        $("#sr-header-project").text($("#display-g-i-ProjectName").text());
        $("#sr-header-domain").text($("#display-g-i-ProjectDomain").text());

        sbUserstoryObj = {
            "ProjectID": projectID,
            "RequirementType": 0,
            "RelatedTo": 0,
            "ModuleID": 0,
            "EpicID": 0,
            "CreatedBy": 0
        }

        initializeSRBR();
        initializeSRBS();
        initializeSRBP();
    }

    function handleAjaxCalls(itemText) {
        if (itemText == "General-Info")
            getGeneralInfo(projectID);
        if (itemText == "Modules")
            getModulesContent(projectID);
        if (itemText == "Epics")
            getEpicsContent(projectID);
        if (itemText == "NFRs")
            getNFRsContent(projectID);
        if (itemText == "Sprints")
            getSprintsContent(projectID);
        if (itemText == "Sprint-Backlog")
            getUserStoriesContent(projectID);
        if (itemText == "Tasks")
            getTasksContent(projectID);
        if (itemText == "Product-Backlog")
            getProductBacklogContent(projectID); 
        if (itemText == "Statistical-Reports")
            getStatisticalReportsContent(projectID);
    }

    function getStatus(container, itemToSelect = null) {
        if (itemToSelect == null) {
            $(container).html("");
            $(container).append("<option selected disabled value='0'>Select Status</option>");
            //$("#add-sprint-Status").html("");
            //$("#add-sprint-Status").append("<option selected disabled value='0'>Select Status</option>");
        } else {
            $(container).html("");
            $(container).append("<option selected disabled value='0'>Select Status</option>");
            //$("#usp-input-Status").html("");
            //$("#usp-input-Status").append("<option selected disabled value='0'>Select Status</option>");
        }

        $.ajax({
            type: "GET",
            url: "/Project/GetStatus",
            data: "",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == null) {
                        if (itemToSelect == dataObject.returnedObject[i].Status) {
                            $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                            //$("#add-sprint-Status").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                        } else {
                            $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                            //$("#add-sprint-Status").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                        }
                    } else {
                        if (itemToSelect == dataObject.returnedObject[i].Status) {
                            $(container).append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                            //$("#usp-input-Status").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                        } else {
                            $(container).append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                            //$("#usp-input-Status").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                        }
                    }
                }

                if (container == "#srch-us-Status")
                    $(container).append("<option value='0'>All</option>");

                if (container == "#srch-task-Status")
                    $(container).append("<option value='0'>All</option>");

                $("#uus-Status").html($(container).html());

            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getModules(itemToSelect = null) {
        if (itemToSelect == null) {
            $("#add-epic-Module").html("");
            $("#add-epic-Module").append("<option selected disabled value='0'>Select Module</option>");
        } else {
            $("#uep-input-Module").html("");
            $("#uep-input-Module").append("<option selected disabled value='0'>Select Module</option>");
        }
        $.ajax({
            type: "POST",
            url: "/Modules/GetModulesForEpic",
            data: "{'projectID': " + projectID + "}",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == null) {
                        if (itemToSelect == dataObject.returnedObject[i].Module) {
                            $("#add-epic-Module").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                        } else {
                            $("#add-epic-Module").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                        }
                    } else {
                        if (itemToSelect == dataObject.returnedObject[i].Domain + "-" +dataObject.returnedObject[i].Module) {
                            $("#uep-input-Module").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                        } else {
                            $("#uep-input-Module").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "-" + dataObject.returnedObject[i].Module + "</option>");
                        }
                    }
                }

            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getDomainsForProjGiUpdate(itemToSelect = null) {
        $("#upp-input-ProjectDomain").html("");
        $("#upp-input-ProjectDomain").append("<option selected disabled value='0'>Select Domain</option>");
        $.ajax({
            type: "GET",
            url: "/Domains/GetDomains",
            data: "",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].Domain) {
                        $("#upp-input-ProjectDomain").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "</option>");
                    } else {
                        $("#upp-input-ProjectDomain").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Domain + "</option>");
                    }
                }

                $("#srchDdmDomain").append("<option value='null'>All</option>");
            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getSystemTypesForProjGiUpdate(itemToSelect = null) {
        $("#upp-input-SystemType").html("");
        $("#upp-input-SystemType").append("<option selected disabled value='0'>Select Type</option>");
        $.ajax({
            type: "GET",
            url: "/Project/GetSystemTypes",
            data: "",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].Type) {
                        $("#upp-input-SystemType").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Type + "</option>");
                    } else {
                        $("#upp-input-SystemType").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Type + "</option>");
                    }
                }

            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function getStatusForProjGiUpdate(itemToSelect = null) {
        $("#upp-input-Status").html("");
        $("#upp-input-Status").append("<option selected disabled value='0'>Select Status</option>");
        $.ajax({
            type: "GET",
            url: "/Project/GetStatus",
            data: "",
            contentType: "application/json; charset=utf-8",
            dataType: "JSON",
            success: function (dataObject) {
                for (var i = 0; i < dataObject.returnedObject.length; i++) {
                    if (itemToSelect == dataObject.returnedObject[i].Status) {
                        $("#upp-input-Status").append("<option selected value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                    } else {
                        $("#upp-input-Status").append("<option value='" + dataObject.returnedObject[i].ID + "'>" + dataObject.returnedObject[i].Status + "</option>");
                    }
                }

            },
            error: function (xhr, status, error) {
                alert("Error: " + xhr.responseText);
            }
        });
    }

    function adjustUSRelations(containerID, reqType = "Functional") {
        if ($(containerID + " option:selected").text() == "System") {
            $(".Relations-Related-Items").fadeOut();
            $(".us-relations-input").removeClass("us-relations-mandatory");
        }
        if ($(containerID + " option:selected").text() == "Module") {
            $(".Relations-Related-Items").hide();
            $(".module-us-input").fadeIn();
            $(".us-relations-input").removeClass("us-relations-mandatory");
            if (reqType == "Non Functional")
                $("#add-us-Module").addClass("us-relations-mandatory");
        }
        if ($(containerID + " option:selected").text() == "Epic") {
            $(".Relations-Related-Items").hide();
            $(".epic-us-input").fadeIn();
            $(".us-relations-input").removeClass("us-relations-mandatory");
            if (reqType == "Non Functional")
               $("#add-us-Epic").addClass("us-relations-mandatory");
        }
        if ($(containerID + " option:selected").text() == "User Story") {
            $(".Relations-Related-Items").hide();
            $(".userstories-us-input").fadeIn();
            $(".us-relations-input").removeClass("us-relations-mandatory");
            if (reqType == "Non Functional")
               $("#add-us-UserStoriesTags").addClass("us-relations-mandatory");
        }
    }

    function handleReqTypeInputes() {
        selectedVal = $("#add-us-ReqType option:selected").text();
        $('#add-us-Relations').attr("onchange", "adjustUSRelations('#add-us-Relations','" + selectedVal + "');");
        if (selectedVal == "Non Functional") {
            $('.custom-us-input').hide();
            $('.standard-us-input').hide();
            $('.nfr-us-input').fadeIn();
            $('.US-Relations-Option').show();
            $('#add-us-Relations').addClass("us-nfr-mandatory");
            $('#add-us-Relations').prev().children().eq(0).show();
            $('.Relations-Related-Items .mandatoryStar').show();
            $('#add-us-Relations').val(0);
            $('.Relations-Related-Items').hide();
        } else {
            $('#add-us-Relations').val(0);
            $('.Relations-Related-Items').hide();
            $('.Relations-Related-Items .mandatoryStar').hide();
            $('#add-us-Relations').removeClass("us-nfr-mandatory");
            $('#add-us-Relations').prev().children().eq(0).hide();
            $('.nfr-us-input').hide();
            if ($('#add-us-UsType option:selected').text() == "Custom") {
                $('.custom-us-input').fadeIn();
            } else {
                $('.custom-us-input').fadeIn();
                $('.nonestandard-us-input').hide();
                $('.standard-us-input').fadeIn();
            }
            $('.US-Relations-Option').hide();
            $('.US-Relations-Option.Functional').show();
        }
    }

    function handleUSTypeInputes(selectedVal) {
        selectedVal = $("#add-us-UsType option:selected").text();
        if (selectedVal == "Custom") {
            $('.standard-us-input').hide();
            $('.nonestandard-us-input').fadeIn();
        } else {
            $('.nonestandard-us-input').hide();
            $('.standard-us-input').fadeIn();
        }
    }

    function validateEmail(email) {
        var filter = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        return filter.test(email);
    }

    function markDropdownSelection(dropdown, selectedItem) {
        if (selectedItem != null)
            $(dropdown).find('option').filter(function () { return ($(this).text() == selectedItem); }).prop('selected', true);
        else
            $(dropdown).val(0);
    }

    $('document').ready(function () {

        getGeneralInfo(projectID);

        $('.nav a').removeClass("active");

        $('#pcLinks li').click(function () {
            if ($(this).children().eq(0).hasClass("active"))
                return;
            $('.contentDiv').hide();
            handleAjaxCalls($(this).children().eq(0).text());
            $('#' + ($(this).children().eq(0).text()) + "ContentDiv").fadeIn();
            $('#ComponentContentTitle').text($(this).children().eq(0).text());
            $('#pcLinks li a').removeClass("active");
            $(this).children().eq(0).addClass("active");
        });

        adjustListMargins('#ProjectComponents');


        $("#add-us-UserStoriesTags").tagsinput({
            allowDuplicates: false,
            itemValue: 'id',
            itemText: 'value',
            tagClass: 'US-Tags'
        });

        $("#add-us-AssignToTags").tagsinput({
            allowDuplicates: false,
            itemValue: 'id',
            itemText: 'value',
            tagClass: 'AT-Tags'
        });

        $("#uus-AssignedUsers").tagsinput({
            allowDuplicates: false,
            itemValue: 'id',
            itemText: 'value',
            tagClass: 'UUSUser-Tags'
        });

        $("#uus-RelatedUserStories").tagsinput({
            allowDuplicates: false,
            itemValue: 'id',
            itemText: 'value',
            tagClass: 'UUSRelatedStories-Tags'
        });

        $("#add-tk-AssignedUsers").tagsinput({
            allowDuplicates: false,
            itemValue: 'id',
            itemText: 'value',
            tagClass: 'AddTK-Tags'
        });

        $("#edit-tk-AssignedUsers").tagsinput({
            allowDuplicates: false,
            itemValue: 'id',
            itemText: 'value',
            tagClass: 'EditTK-Tags'
        });

    });

</script>

<style>
    .Add-New-US-Container .row {
        margin-bottom: 10px;
    }

    .US-Relations-Option {
        display: none;
    }

        .US-Relations-Option.Functional {
            display: block;
        }

    .MANOFR-Update-Panel {
        display: none;
        position: absolute;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0,0,0,0.2);
        z-index: 100;
    }

    .MANOFR-Update-Data-Container {
        position: relative;
        background: white;
        width: 60%;
        height: auto;
        max-height: 55%;
        overflow-y: auto;
        margin: 12% auto;
        padding: 0 0 50px 0;
        border-radius: 30px;
        box-shadow: 0px 0px 15px -2px black;
    }

    #updateProjGi-Data-Container {
        width: 70%;
    }

    .MANOFR-Update-CloseBtn {
        position: absolute;
        top: 20px;
        right: 20px;
        font-size: 30px;
        cursor: pointer;
    }

        .MANOFR-Update-CloseBtn:hover {
            top: 18px;
            right: 18px;
            font-size: 34px;
        }

    .MANOFR-Update-Data-Container h4 {
        position: relative;
        width: 400px;
        top: 20px;
        color: #444;
        margin: 0 auto;
        text-align: center;
    }
</style>

<div id="updateSprintPanel" class="MANOFR-Update-Panel">
    <div id="updateSprint-Data-Container" class="MANOFR-Update-Data-Container">
        <i onclick="$('#updateSprintPanel').fadeOut();" id="uspCloseBtn" class="fa fa-close MANOFR-Update-CloseBtn"></i>
        <h4>Update Sprint Info</h4>
        <br />
        <hr style="width: 85%;" />
        <div id="updateSprint-Data" class="col-md-10 offset-md-1 p-0 MANOFR-Update-Data">
            <div class="row">
                <div class="col-md-2">
                    <label>ID</label>
                    <input disabled id="usp-input-ID" class="form-control form-control-sm" type="text" />
                </div>
                <div class="col-md-4">
                    <label><span class="mandatoryStar">*</span>Sprint Name</label>
                    <input id="usp-input-Name" class="form-control form-control-sm usp-mandatory-field" type="text" />
                </div>

                <div class="col-md-3">
                    <label><span class="mandatoryStar">*</span>Start Date</label>
                    <input id="usp-input-StartDate" class="form-control form-control-sm usp-mandatory-field" type="date" />
                </div>

                <div class="col-md-3">
                    <label><span class="mandatoryStar">*</span>End Date</label>
                    <input id="usp-input-EndDate" class="form-control form-control-sm usp-mandatory-field" type="date" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label>Sprint Goal</label>
                    <textarea id="usp-input-Goal" rows="1" class="form-control form-control-sm"></textarea>
                </div>
                <div class="col-md-3">
                    <label><span class="mandatoryStar">*</span>Status</label>
                    <select id="usp-input-Status" class="form-control form-control-sm usp-mandatory-field"></select>
                </div>
                <div class="col-md-3 text-right">
                    <label class="col-md-12" style="color:transparent">-</label>
                    <button id="usp-btn-Submit" class="btn btn-sm btn-success float-right">Update</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="updateEpicPanel" class="MANOFR-Update-Panel">
    <div id="updateEpic-Data-Container" class="MANOFR-Update-Data-Container">
        <i onclick="$('#updateEpicPanel').fadeOut();" id="uepCloseBtn" class="fa fa-close MANOFR-Update-CloseBtn"></i>
        <h4>Update Epic Info</h4>
        <br />
        <hr style="width: 85%;" />
        <div id="updateEpic-Data" class="col-md-10 offset-md-1 p-0 MANOFR-Update-Data">
            <div class="row">
                <div class="col-md-2 offset-md-2">
                    <label>ID</label>
                    <input disabled id="uep-input-ID" class="form-control form-control-sm" type="text" />
                </div>
                <div class="col-md-6">
                    <label><span class="mandatoryStar">*</span>Module</label>
                    <select id="uep-input-Module" class="form-control form-control-sm uep-mandatory-field"></select>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 offset-md-2">
                    <label><span class="mandatoryStar">*</span>Epic Name</label>
                    <input id="uep-input-Name" class="form-control form-control-sm uep-mandatory-field" type="text" />
                </div>
                <div class="col-md-4 text-right">
                    <label class="col-md-12" style="color:transparent">-</label>
                    <button id="uep-btn-Submit" class="btn btn-sm btn-success float-right">Update</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="updateProjGiPanel" class="MANOFR-Update-Panel">
    <div id="updateProjGi-Data-Container" class="MANOFR-Update-Data-Container">
        <i onclick="$('#updateProjGiPanel').fadeOut();" id="uppCloseBtn" class="fa fa-close MANOFR-Update-CloseBtn"></i>
        <h4>Update Project Info</h4>
        <br />
        <hr style="width: 85%;" />
        <div id="updateProjGi-Data" class="col-md-10 offset-md-1 p-0 MANOFR-Update-Data">
            <div class="row">
                <div class="col-md-2">
                    <label>Project ID</label>
                    <input disabled id="upp-input-ProjectID" class="form-control form-control-sm" type="text" />
                </div>
                <div class="col-md-6">
                    <label><span class="mandatoryStar">*</span>Project Name</label>
                    <input id="upp-input-ProjectName" class="form-control form-control-sm upp-mandatory-field" type="text" />
                </div>
                <div class="col-md-4">
                    <label><span class="mandatoryStar">*</span>Project Domain</label>
                    <select id="upp-input-ProjectDomain" class="form-control form-control-sm upp-mandatory-field"></select>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <label>Customer Name</label>
                    <input id="upp-input-CName" class="form-control form-control-sm" type="text" />
                </div>
                <div class="col-md-4">
                    <label>Customer Phone</label>
                    <input id="upp-input-CPhone" class="form-control form-control-sm" type="text" />
                </div>
                <div class="col-md-4">
                    <label>Customer Email</label>
                    <input id="upp-input-CEmail" class="form-control form-control-sm" type="email" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <label>Start Date</label>
                    <input id="upp-input-StartDate" class="form-control form-control-sm" type="date" />
                </div>
                <div class="col-md-4">
                    <label>End Date</label>
                    <input id="upp-input-EndDate" class="form-control form-control-sm" type="date" />
                </div>
                <div class="col-md-4">
                    <label><span class="mandatoryStar">*</span>Status</label>
                    <select id="upp-input-Status" class="form-control form-control-sm upp-mandatory-field"></select>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <label><span class="mandatoryStar">*</span>System Type</label>
                    <select id="upp-input-SystemType" class="form-control form-control-sm upp-mandatory-field"></select>
                </div>
                <div class="col-md-4">
                    <label>Description</label>
                    <textarea rows="1" id="upp-input-Description" class="form-control form-control-sm"></textarea>
                </div>
                <div class="col-md-4 text-right">
                    <label class="col-md-12" style="color:transparent">-</label>
                    <button id="upp-btn-Submit" class="btn btn-sm btn-success float-right">Update</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    /************** Inputs Tags Script *************************/
    (function ($) {
        "use strict";
        var defaultOptions = {
            tagClass: function (item) {
                return 'label label-info';
            },
            itemValue: function (item) {
                return item ? item.toString() : item;
            },
            itemText: function (item) {
                return this.itemValue(item);
            },
            itemTitle: function (item) {
                return null;
            },
            freeInput: true,
            addOnBlur: true,
            maxTags: undefined,
            maxChars: undefined,
            confirmKeys: [13, 44],
            delimiter: ',',
            delimiterRegex: null,
            cancelConfirmKeysOnEmpty: true,
            onTagExists: function (item, $tag) {
                $tag.hide().fadeIn();
            },
            trimValue: false,
            allowDuplicates: false
        };

        /**
         * Constructor function
         */
        function TagsInput(element, options) {
            this.itemsArray = [];

            this.$element = $(element);
            this.$element.hide();

            this.isSelect = (element.tagName === 'SELECT');
            this.multiple = (this.isSelect && element.hasAttribute('multiple'));
            this.objectItems = options && options.itemValue;
            this.placeholderText = element.hasAttribute('placeholder') ? this.$element.attr('placeholder') : '';
            this.inputSize = Math.max(1, this.placeholderText.length);

            this.$container = $('<div class="bootstrap-tagsinput"></div>');
            this.$input = $('<input type="text" placeholder="' + this.placeholderText + '"/>').appendTo(this.$container);

            this.$element.before(this.$container);

            this.build(options);
        }

        TagsInput.prototype = {
            constructor: TagsInput,

            /**
             * Adds the given item as a new tag. Pass true to dontPushVal to prevent
             * updating the elements val()
             */
            add: function (item, dontPushVal, options) {
                var self = this;

                if (self.options.maxTags && self.itemsArray.length >= self.options.maxTags)
                    return;

                // Ignore falsey values, except false
                if (item !== false && !item)
                    return;

                // Trim value
                if (typeof item === "string" && self.options.trimValue) {
                    item = $.trim(item);
                }

                // Throw an error when trying to add an object while the itemValue option was not set
                if (typeof item === "object" && !self.objectItems)
                    throw ("Can't add objects when itemValue option is not set");

                // Ignore strings only containg whitespace
                if (item.toString().match(/^\s*$/))
                    return;

                // If SELECT but not multiple, remove current tag
                if (self.isSelect && !self.multiple && self.itemsArray.length > 0)
                    self.remove(self.itemsArray[0]);

                if (typeof item === "string" && this.$element[0].tagName === 'INPUT') {
                    var delimiter = (self.options.delimiterRegex) ? self.options.delimiterRegex : self.options.delimiter;
                    var items = item.split(delimiter);
                    if (items.length > 1) {
                        for (var i = 0; i < items.length; i++) {
                            this.add(items[i], true);
                        }

                        if (!dontPushVal)
                            self.pushVal();
                        return;
                    }
                }

                var itemValue = self.options.itemValue(item),
                    itemText = self.options.itemText(item),
                    tagClass = self.options.tagClass(item),
                    itemTitle = self.options.itemTitle(item);

                // Ignore items allready added
                var existing = $.grep(self.itemsArray, function (item) { return self.options.itemValue(item) === itemValue; })[0];

                if (existing && !self.options.allowDuplicates) {
                    // Invoke onTagExists
                    if (self.options.onTagExists) {
                        var $existingTag = $(".tag", self.$container).filter(function () { return $(this).data("item") === existing; });
                        self.options.onTagExists(item, $existingTag);
                    }
                    return;
                }

                // if length greater than limit
                if (self.items().toString().length + item.length + 1 > self.options.maxInputLength)
                    return;

                // raise beforeItemAdd arg
                var beforeItemAddEvent = $.Event('beforeItemAdd', { item: item, cancel: false, options: options });
                self.$element.trigger(beforeItemAddEvent);
                if (beforeItemAddEvent.cancel)
                    return;

                // register item in internal array and map
                self.itemsArray.push(item);

                // add a tag element

                var $tag = $('<span class="tag ' + htmlEncode(tagClass) + (itemTitle !== null ? ('" title="' + itemTitle) : '') + '"><span TagID="' + itemValue + '" class="' + tagClass + '-Item">' + htmlEncode(itemText) + '</span><span data-role="remove"></span></span>');
                $tag.data('item', item);
                self.findInputWrapper().before($tag);
                $tag.after(' ');

                // add <option /> if item represents a value not present in one of the <select />'s options
                if (self.isSelect && !$('option[value="' + encodeURIComponent(itemValue) + '"]', self.$element)[0]) {
                    var $option = $('<option selected>' + htmlEncode(itemText) + '</option>');
                    $option.data('item', item);
                    $option.attr('value', itemValue);
                    self.$element.append($option);
                }

                if (!dontPushVal)
                    self.pushVal();

                // Add class when reached maxTags
                if (self.options.maxTags === self.itemsArray.length || self.items().toString().length === self.options.maxInputLength)
                    self.$container.addClass('bootstrap-tagsinput-max');

                self.$element.trigger($.Event('itemAdded', { item: item, options: options }));
            },

            /**
             * Removes the given item. Pass true to dontPushVal to prevent updating the
             * elements val()
             */
            remove: function (item, dontPushVal, options) {
                var self = this;

                if (self.objectItems) {
                    if (typeof item === "object")
                        item = $.grep(self.itemsArray, function (other) { return self.options.itemValue(other) == self.options.itemValue(item); });
                    else
                        item = $.grep(self.itemsArray, function (other) { return self.options.itemValue(other) == item; });

                    item = item[item.length - 1];
                }

                if (item) {
                    var beforeItemRemoveEvent = $.Event('beforeItemRemove', { item: item, cancel: false, options: options });
                    self.$element.trigger(beforeItemRemoveEvent);
                    if (beforeItemRemoveEvent.cancel)
                        return;

                    $('.tag', self.$container).filter(function () { return $(this).data('item') === item; }).remove();
                    $('option', self.$element).filter(function () { return $(this).data('item') === item; }).remove();
                    if ($.inArray(item, self.itemsArray) !== -1)
                        self.itemsArray.splice($.inArray(item, self.itemsArray), 1);
                }

                if (!dontPushVal)
                    self.pushVal();

                // Remove class when reached maxTags
                if (self.options.maxTags > self.itemsArray.length)
                    self.$container.removeClass('bootstrap-tagsinput-max');

                self.$element.trigger($.Event('itemRemoved', { item: item, options: options }));
            },

            /**
             * Removes all items
             */
            removeAll: function () {
                var self = this;

                $('.tag', self.$container).remove();
                $('option', self.$element).remove();

                while (self.itemsArray.length > 0)
                    self.itemsArray.pop();

                self.pushVal();
            },

            /**
             * Refreshes the tags so they match the text/value of their corresponding
             * item.
             */
            refresh: function () {
                var self = this;
                $('.tag', self.$container).each(function () {
                    var $tag = $(this),
                        item = $tag.data('item'),
                        itemValue = self.options.itemValue(item),
                        itemText = self.options.itemText(item),
                        tagClass = self.options.tagClass(item);

                    // Update tag's class and inner text
                    $tag.attr('class', null);
                    $tag.addClass('tag ' + htmlEncode(tagClass));
                    $tag.contents().filter(function () {
                        return this.nodeType == 3;
                    })[0].nodeValue = htmlEncode(itemText);

                    if (self.isSelect) {
                        var option = $('option', self.$element).filter(function () { return $(this).data('item') === item; });
                        option.attr('value', itemValue);
                    }
                });
            },

            /**
             * Returns the items added as tags
             */
            items: function () {
                return this.itemsArray;
            },

            /**
             * Assembly value by retrieving the value of each item, and set it on the
             * element.
             */
            pushVal: function () {
                var self = this,
                    val = $.map(self.items(), function (item) {
                        return self.options.itemValue(item).toString();
                    });

                self.$element.val(val, true).trigger('change');
            },

            /**
             * Initializes the tags input behaviour on the element
             */
            build: function (options) {
                var self = this;

                self.options = $.extend({}, defaultOptions, options);
                // When itemValue is set, freeInput should always be false
                if (self.objectItems)
                    self.options.freeInput = false;

                makeOptionItemFunction(self.options, 'itemValue');
                makeOptionItemFunction(self.options, 'itemText');
                makeOptionFunction(self.options, 'tagClass');

                // Typeahead Bootstrap version 2.3.2
                if (self.options.typeahead) {
                    var typeahead = self.options.typeahead || {};

                    makeOptionFunction(typeahead, 'source');

                    self.$input.typeahead($.extend({}, typeahead, {
                        source: function (query, process) {
                            function processItems(items) {
                                var texts = [];

                                for (var i = 0; i < items.length; i++) {
                                    var text = self.options.itemText(items[i]);
                                    map[text] = items[i];
                                    texts.push(text);
                                }
                                process(texts);
                            }

                            this.map = {};
                            var map = this.map,
                                data = typeahead.source(query);

                            if ($.isFunction(data.success)) {
                                // support for Angular callbacks
                                data.success(processItems);
                            } else if ($.isFunction(data.then)) {
                                // support for Angular promises
                                data.then(processItems);
                            } else {
                                // support for functions and jquery promises
                                $.when(data)
                                    .then(processItems);
                            }
                        },
                        updater: function (text) {
                            self.add(this.map[text]);
                            return this.map[text];
                        },
                        matcher: function (text) {
                            return (text.toLowerCase().indexOf(this.query.trim().toLowerCase()) !== -1);
                        },
                        sorter: function (texts) {
                            return texts.sort();
                        },
                        highlighter: function (text) {
                            var regex = new RegExp('(' + this.query + ')', 'gi');
                            return text.replace(regex, "<strong>$1</strong>");
                        }
                    }));
                }

                // typeahead.js
                if (self.options.typeaheadjs) {
                    var typeaheadConfig = null;
                    var typeaheadDatasets = {};

                    // Determine if main configurations were passed or simply a dataset
                    var typeaheadjs = self.options.typeaheadjs;
                    if ($.isArray(typeaheadjs)) {
                        typeaheadConfig = typeaheadjs[0];
                        typeaheadDatasets = typeaheadjs[1];
                    } else {
                        typeaheadDatasets = typeaheadjs;
                    }

                    self.$input.typeahead(typeaheadConfig, typeaheadDatasets).on('typeahead:selected', $.proxy(function (obj, datum) {
                        if (typeaheadDatasets.valueKey)
                            self.add(datum[typeaheadDatasets.valueKey]);
                        else
                            self.add(datum);
                        self.$input.typeahead('val', '');
                    }, self));
                }

                self.$container.on('click', $.proxy(function (event) {
                    if (!self.$element.attr('disabled')) {
                        self.$input.removeAttr('disabled');
                    }
                    self.$input.focus();
                }, self));

                if (self.options.addOnBlur && self.options.freeInput) {
                    self.$input.on('focusout', $.proxy(function (event) {
                        // HACK: only process on focusout when no typeahead opened, to
                        //       avoid adding the typeahead text as tag
                        if ($('.typeahead, .twitter-typeahead', self.$container).length === 0) {
                            self.add(self.$input.val());
                            self.$input.val('');
                        }
                    }, self));
                }


                self.$container.on('keydown', 'input', $.proxy(function (event) {
                    var $input = $(event.target),
                        $inputWrapper = self.findInputWrapper();

                    if (self.$element.attr('disabled')) {
                        self.$input.attr('disabled', 'disabled');
                        return;
                    }

                    switch (event.which) {
                        // BACKSPACE
                        case 8:
                            if (doGetCaretPosition($input[0]) === 0) {
                                var prev = $inputWrapper.prev();
                                if (prev.length) {
                                    self.remove(prev.data('item'));
                                }
                            }
                            break;

                        // DELETE
                        case 46:
                            if (doGetCaretPosition($input[0]) === 0) {
                                var next = $inputWrapper.next();
                                if (next.length) {
                                    self.remove(next.data('item'));
                                }
                            }
                            break;

                        // LEFT ARROW
                        case 37:
                            // Try to move the input before the previous tag
                            var $prevTag = $inputWrapper.prev();
                            if ($input.val().length === 0 && $prevTag[0]) {
                                $prevTag.before($inputWrapper);
                                $input.focus();
                            }
                            break;
                        // RIGHT ARROW
                        case 39:
                            // Try to move the input after the next tag
                            var $nextTag = $inputWrapper.next();
                            if ($input.val().length === 0 && $nextTag[0]) {
                                $nextTag.after($inputWrapper);
                                $input.focus();
                            }
                            break;
                        default:
                        // ignore
                    }

                    // Reset internal input's size
                    var textLength = $input.val().length,
                        wordSpace = Math.ceil(textLength / 5),
                        size = textLength + wordSpace + 1;
                    $input.attr('size', Math.max(this.inputSize, $input.val().length));
                }, self));

                self.$container.on('keypress', 'input', $.proxy(function (event) {
                    var $input = $(event.target);

                    if (self.$element.attr('disabled')) {
                        self.$input.attr('disabled', 'disabled');
                        return;
                    }

                    var text = $input.val(),
                        maxLengthReached = self.options.maxChars && text.length >= self.options.maxChars;
                    if (self.options.freeInput && (keyCombinationInList(event, self.options.confirmKeys) || maxLengthReached)) {
                        // Only attempt to add a tag if there is data in the field
                        if (text.length !== 0) {
                            self.add(maxLengthReached ? text.substr(0, self.options.maxChars) : text);
                            $input.val('');
                        }

                        // If the field is empty, let the event triggered fire as usual
                        if (self.options.cancelConfirmKeysOnEmpty === false) {
                            event.preventDefault();
                        }
                    }

                    // Reset internal input's size
                    var textLength = $input.val().length,
                        wordSpace = Math.ceil(textLength / 5),
                        size = textLength + wordSpace + 1;
                    $input.attr('size', Math.max(this.inputSize, $input.val().length));
                }, self));

                // Remove icon clicked
                self.$container.on('click', '[data-role=remove]', $.proxy(function (event) {
                    if (self.$element.attr('disabled')) {
                        return;
                    }
                    self.remove($(event.target).closest('.tag').data('item'));
                }, self));

                // Only add existing value as tags when using strings as tags
                if (self.options.itemValue === defaultOptions.itemValue) {
                    if (self.$element[0].tagName === 'INPUT') {
                        self.add(self.$element.val());
                    } else {
                        $('option', self.$element).each(function () {
                            self.add($(this).attr('value'), true);
                        });
                    }
                }
            },

            /**
             * Removes all tagsinput behaviour and unregsiter all event handlers
             */
            destroy: function () {
                var self = this;

                // Unbind events
                self.$container.off('keypress', 'input');
                self.$container.off('click', '[role=remove]');

                self.$container.remove();
                self.$element.removeData('tagsinput');
                self.$element.show();
            },

            /**
             * Sets focus on the tagsinput
             */
            focus: function () {
                this.$input.focus();
            },

            /**
             * Returns the internal input element
             */
            input: function () {
                return this.$input;
            },

            /**
             * Returns the element which is wrapped around the internal input. This
             * is normally the $container, but typeahead.js moves the $input element.
             */
            findInputWrapper: function () {
                var elt = this.$input[0],
                    container = this.$container[0];
                while (elt && elt.parentNode !== container)
                    elt = elt.parentNode;

                return $(elt);
            }
        };

        /**
         * Register JQuery plugin
         */
        $.fn.tagsinput = function (arg1, arg2, arg3) {
            var results = [];

            this.each(function () {
                var tagsinput = $(this).data('tagsinput');
                // Initialize a new tags input
                if (!tagsinput) {
                    tagsinput = new TagsInput(this, arg1);
                    $(this).data('tagsinput', tagsinput);
                    results.push(tagsinput);

                    if (this.tagName === 'SELECT') {
                        $('option', $(this)).attr('selected', 'selected');
                    }

                    // Init tags from $(this).val()
                    $(this).val($(this).val());
                } else if (!arg1 && !arg2) {
                    // tagsinput already exists
                    // no function, trying to init
                    results.push(tagsinput);
                } else if (tagsinput[arg1] !== undefined) {
                    // Invoke function on existing tags input
                    if (tagsinput[arg1].length === 3 && arg3 !== undefined) {
                        var retVal = tagsinput[arg1](arg2, null, arg3);
                    } else {
                        var retVal = tagsinput[arg1](arg2);
                    }
                    if (retVal !== undefined)
                        results.push(retVal);
                }
            });

            if (typeof arg1 == 'string') {
                // Return the results from the invoked function calls
                return results.length > 1 ? results : results[0];
            } else {
                return results;
            }
        };

        $.fn.tagsinput.Constructor = TagsInput;

        /**
         * Most options support both a string or number as well as a function as
         * option value. This function makes sure that the option with the given
         * key in the given options is wrapped in a function
         */
        function makeOptionItemFunction(options, key) {
            if (typeof options[key] !== 'function') {
                var propertyName = options[key];
                options[key] = function (item) { return item[propertyName]; };
            }
        }
        function makeOptionFunction(options, key) {
            if (typeof options[key] !== 'function') {
                var value = options[key];
                options[key] = function () { return value; };
            }
        }
        /**
         * HtmlEncodes the given value
         */
        var htmlEncodeContainer = $('<div />');
        function htmlEncode(value) {
            if (value) {
                return htmlEncodeContainer.text(value).html();
            } else {
                return '';
            }
        }

        /**
         * Returns the position of the caret in the given input field
         * http://flightschool.acylt.com/devnotes/caret-position-woes/
         */
        function doGetCaretPosition(oField) {
            var iCaretPos = 0;
            if (document.selection) {
                oField.focus();
                var oSel = document.selection.createRange();
                oSel.moveStart('character', -oField.value.length);
                iCaretPos = oSel.text.length;
            } else if (oField.selectionStart || oField.selectionStart == '0') {
                iCaretPos = oField.selectionStart;
            }
            return (iCaretPos);
        }

        /**
          * Returns boolean indicates whether user has pressed an expected key combination.
          * @@param object keyPressEvent: JavaScript event object, refer
          *     http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
          * @@param object lookupList: expected key combinations, as in:
          *     [13, {which: 188, shiftKey: true}]
          */
        function keyCombinationInList(keyPressEvent, lookupList) {
            var found = false;
            $.each(lookupList, function (index, keyCombination) {
                if (typeof (keyCombination) === 'number' && keyPressEvent.which === keyCombination) {
                    found = true;
                    return false;
                }

                if (keyPressEvent.which === keyCombination.which) {
                    var alt = !keyCombination.hasOwnProperty('altKey') || keyPressEvent.altKey === keyCombination.altKey,
                        shift = !keyCombination.hasOwnProperty('shiftKey') || keyPressEvent.shiftKey === keyCombination.shiftKey,
                        ctrl = !keyCombination.hasOwnProperty('ctrlKey') || keyPressEvent.ctrlKey === keyCombination.ctrlKey;
                    if (alt && shift && ctrl) {
                        found = true;
                        return false;
                    }
                }
            });

            return found;
        }

        /**
         * Initialize tagsinput behaviour on inputs and selects which have
         * data-role=tagsinput
         */
        $(function () {
            $("input[data-role=tagsinput], select[multiple][data-role=tagsinput]").tagsinput();
        });
    })(window.jQuery);

</script>

